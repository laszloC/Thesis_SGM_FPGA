// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "inverse_img.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int inverse_img::C_S_AXI_DATA_WIDTH = "100000";
const int inverse_img::C_S_AXI_WSTRB_WIDTH = "100";
const int inverse_img::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic inverse_img::ap_const_logic_1 = sc_dt::Log_1;
const int inverse_img::C_M_AXI_D_BUS_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int inverse_img::C_M_AXI_D_BUS_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int inverse_img::C_M_AXI_D_BUS_CACHE_VALUE = "11";
const int inverse_img::C_M_AXI_ID_WIDTH = "1";
const int inverse_img::C_M_AXI_ADDR_WIDTH = "100000";
const int inverse_img::C_M_AXI_DATA_WIDTH = "100000";
const int inverse_img::C_M_AXI_WSTRB_WIDTH = "100";
const int inverse_img::C_M_AXI_AWUSER_WIDTH = "1";
const int inverse_img::C_M_AXI_ARUSER_WIDTH = "1";
const int inverse_img::C_M_AXI_WUSER_WIDTH = "1";
const int inverse_img::C_M_AXI_RUSER_WIDTH = "1";
const int inverse_img::C_M_AXI_BUSER_WIDTH = "1";
const sc_logic inverse_img::ap_const_logic_0 = sc_dt::Log_0;

inverse_img::inverse_img(sc_module_name name) : sc_module(name), mVcdFile(0) {
    inverse_img_D_BUS_s_axi_U = new inverse_img_D_BUS_s_axi<C_S_AXI_D_BUS_ADDR_WIDTH,C_S_AXI_D_BUS_DATA_WIDTH>("inverse_img_D_BUS_s_axi_U");
    inverse_img_D_BUS_s_axi_U->AWVALID(s_axi_D_BUS_AWVALID);
    inverse_img_D_BUS_s_axi_U->AWREADY(s_axi_D_BUS_AWREADY);
    inverse_img_D_BUS_s_axi_U->AWADDR(s_axi_D_BUS_AWADDR);
    inverse_img_D_BUS_s_axi_U->WVALID(s_axi_D_BUS_WVALID);
    inverse_img_D_BUS_s_axi_U->WREADY(s_axi_D_BUS_WREADY);
    inverse_img_D_BUS_s_axi_U->WDATA(s_axi_D_BUS_WDATA);
    inverse_img_D_BUS_s_axi_U->WSTRB(s_axi_D_BUS_WSTRB);
    inverse_img_D_BUS_s_axi_U->ARVALID(s_axi_D_BUS_ARVALID);
    inverse_img_D_BUS_s_axi_U->ARREADY(s_axi_D_BUS_ARREADY);
    inverse_img_D_BUS_s_axi_U->ARADDR(s_axi_D_BUS_ARADDR);
    inverse_img_D_BUS_s_axi_U->RVALID(s_axi_D_BUS_RVALID);
    inverse_img_D_BUS_s_axi_U->RREADY(s_axi_D_BUS_RREADY);
    inverse_img_D_BUS_s_axi_U->RDATA(s_axi_D_BUS_RDATA);
    inverse_img_D_BUS_s_axi_U->RRESP(s_axi_D_BUS_RRESP);
    inverse_img_D_BUS_s_axi_U->BVALID(s_axi_D_BUS_BVALID);
    inverse_img_D_BUS_s_axi_U->BREADY(s_axi_D_BUS_BREADY);
    inverse_img_D_BUS_s_axi_U->BRESP(s_axi_D_BUS_BRESP);
    inverse_img_D_BUS_s_axi_U->ACLK(ap_clk);
    inverse_img_D_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    inverse_img_D_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    inverse_img_D_BUS_s_axi_U->ap_start(ap_start);
    inverse_img_D_BUS_s_axi_U->interrupt(interrupt);
    inverse_img_D_BUS_s_axi_U->ap_ready(ap_ready);
    inverse_img_D_BUS_s_axi_U->ap_done(ap_done);
    inverse_img_D_BUS_s_axi_U->ap_idle(ap_idle);
    inverse_img_D_BUS_s_axi_U->img_in(img_in);
    inverse_img_D_BUS_s_axi_U->img_out(img_out);
    inverse_img_D_BUS_m_axi_U = new inverse_img_D_BUS_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_D_BUS_ID_WIDTH,C_M_AXI_D_BUS_ADDR_WIDTH,C_M_AXI_D_BUS_DATA_WIDTH,C_M_AXI_D_BUS_AWUSER_WIDTH,C_M_AXI_D_BUS_ARUSER_WIDTH,C_M_AXI_D_BUS_WUSER_WIDTH,C_M_AXI_D_BUS_RUSER_WIDTH,C_M_AXI_D_BUS_BUSER_WIDTH,C_M_AXI_D_BUS_USER_VALUE,C_M_AXI_D_BUS_PROT_VALUE,C_M_AXI_D_BUS_CACHE_VALUE>("inverse_img_D_BUS_m_axi_U");
    inverse_img_D_BUS_m_axi_U->AWVALID(m_axi_D_BUS_AWVALID);
    inverse_img_D_BUS_m_axi_U->AWREADY(m_axi_D_BUS_AWREADY);
    inverse_img_D_BUS_m_axi_U->AWADDR(m_axi_D_BUS_AWADDR);
    inverse_img_D_BUS_m_axi_U->AWID(m_axi_D_BUS_AWID);
    inverse_img_D_BUS_m_axi_U->AWLEN(m_axi_D_BUS_AWLEN);
    inverse_img_D_BUS_m_axi_U->AWSIZE(m_axi_D_BUS_AWSIZE);
    inverse_img_D_BUS_m_axi_U->AWBURST(m_axi_D_BUS_AWBURST);
    inverse_img_D_BUS_m_axi_U->AWLOCK(m_axi_D_BUS_AWLOCK);
    inverse_img_D_BUS_m_axi_U->AWCACHE(m_axi_D_BUS_AWCACHE);
    inverse_img_D_BUS_m_axi_U->AWPROT(m_axi_D_BUS_AWPROT);
    inverse_img_D_BUS_m_axi_U->AWQOS(m_axi_D_BUS_AWQOS);
    inverse_img_D_BUS_m_axi_U->AWREGION(m_axi_D_BUS_AWREGION);
    inverse_img_D_BUS_m_axi_U->AWUSER(m_axi_D_BUS_AWUSER);
    inverse_img_D_BUS_m_axi_U->WVALID(m_axi_D_BUS_WVALID);
    inverse_img_D_BUS_m_axi_U->WREADY(m_axi_D_BUS_WREADY);
    inverse_img_D_BUS_m_axi_U->WDATA(m_axi_D_BUS_WDATA);
    inverse_img_D_BUS_m_axi_U->WSTRB(m_axi_D_BUS_WSTRB);
    inverse_img_D_BUS_m_axi_U->WLAST(m_axi_D_BUS_WLAST);
    inverse_img_D_BUS_m_axi_U->WID(m_axi_D_BUS_WID);
    inverse_img_D_BUS_m_axi_U->WUSER(m_axi_D_BUS_WUSER);
    inverse_img_D_BUS_m_axi_U->ARVALID(m_axi_D_BUS_ARVALID);
    inverse_img_D_BUS_m_axi_U->ARREADY(m_axi_D_BUS_ARREADY);
    inverse_img_D_BUS_m_axi_U->ARADDR(m_axi_D_BUS_ARADDR);
    inverse_img_D_BUS_m_axi_U->ARID(m_axi_D_BUS_ARID);
    inverse_img_D_BUS_m_axi_U->ARLEN(m_axi_D_BUS_ARLEN);
    inverse_img_D_BUS_m_axi_U->ARSIZE(m_axi_D_BUS_ARSIZE);
    inverse_img_D_BUS_m_axi_U->ARBURST(m_axi_D_BUS_ARBURST);
    inverse_img_D_BUS_m_axi_U->ARLOCK(m_axi_D_BUS_ARLOCK);
    inverse_img_D_BUS_m_axi_U->ARCACHE(m_axi_D_BUS_ARCACHE);
    inverse_img_D_BUS_m_axi_U->ARPROT(m_axi_D_BUS_ARPROT);
    inverse_img_D_BUS_m_axi_U->ARQOS(m_axi_D_BUS_ARQOS);
    inverse_img_D_BUS_m_axi_U->ARREGION(m_axi_D_BUS_ARREGION);
    inverse_img_D_BUS_m_axi_U->ARUSER(m_axi_D_BUS_ARUSER);
    inverse_img_D_BUS_m_axi_U->RVALID(m_axi_D_BUS_RVALID);
    inverse_img_D_BUS_m_axi_U->RREADY(m_axi_D_BUS_RREADY);
    inverse_img_D_BUS_m_axi_U->RDATA(m_axi_D_BUS_RDATA);
    inverse_img_D_BUS_m_axi_U->RLAST(m_axi_D_BUS_RLAST);
    inverse_img_D_BUS_m_axi_U->RID(m_axi_D_BUS_RID);
    inverse_img_D_BUS_m_axi_U->RUSER(m_axi_D_BUS_RUSER);
    inverse_img_D_BUS_m_axi_U->RRESP(m_axi_D_BUS_RRESP);
    inverse_img_D_BUS_m_axi_U->BVALID(m_axi_D_BUS_BVALID);
    inverse_img_D_BUS_m_axi_U->BREADY(m_axi_D_BUS_BREADY);
    inverse_img_D_BUS_m_axi_U->BRESP(m_axi_D_BUS_BRESP);
    inverse_img_D_BUS_m_axi_U->BID(m_axi_D_BUS_BID);
    inverse_img_D_BUS_m_axi_U->BUSER(m_axi_D_BUS_BUSER);
    inverse_img_D_BUS_m_axi_U->ACLK(ap_clk);
    inverse_img_D_BUS_m_axi_U->ARESET(ap_rst_n_inv);
    inverse_img_D_BUS_m_axi_U->ACLK_EN(ap_var_for_const0);
    inverse_img_D_BUS_m_axi_U->I_ARVALID(Loop_1_proc_U0_m_axi_img_in_ARVALID);
    inverse_img_D_BUS_m_axi_U->I_ARREADY(D_BUS_ARREADY);
    inverse_img_D_BUS_m_axi_U->I_ARADDR(Loop_1_proc_U0_m_axi_img_in_ARADDR);
    inverse_img_D_BUS_m_axi_U->I_ARID(Loop_1_proc_U0_m_axi_img_in_ARID);
    inverse_img_D_BUS_m_axi_U->I_ARLEN(Loop_1_proc_U0_m_axi_img_in_ARLEN);
    inverse_img_D_BUS_m_axi_U->I_ARSIZE(Loop_1_proc_U0_m_axi_img_in_ARSIZE);
    inverse_img_D_BUS_m_axi_U->I_ARLOCK(Loop_1_proc_U0_m_axi_img_in_ARLOCK);
    inverse_img_D_BUS_m_axi_U->I_ARCACHE(Loop_1_proc_U0_m_axi_img_in_ARCACHE);
    inverse_img_D_BUS_m_axi_U->I_ARQOS(Loop_1_proc_U0_m_axi_img_in_ARQOS);
    inverse_img_D_BUS_m_axi_U->I_ARPROT(Loop_1_proc_U0_m_axi_img_in_ARPROT);
    inverse_img_D_BUS_m_axi_U->I_ARUSER(Loop_1_proc_U0_m_axi_img_in_ARUSER);
    inverse_img_D_BUS_m_axi_U->I_ARBURST(Loop_1_proc_U0_m_axi_img_in_ARBURST);
    inverse_img_D_BUS_m_axi_U->I_ARREGION(Loop_1_proc_U0_m_axi_img_in_ARREGION);
    inverse_img_D_BUS_m_axi_U->I_RVALID(D_BUS_RVALID);
    inverse_img_D_BUS_m_axi_U->I_RREADY(Loop_1_proc_U0_m_axi_img_in_RREADY);
    inverse_img_D_BUS_m_axi_U->I_RDATA(D_BUS_RDATA);
    inverse_img_D_BUS_m_axi_U->I_RID(D_BUS_RID);
    inverse_img_D_BUS_m_axi_U->I_RUSER(D_BUS_RUSER);
    inverse_img_D_BUS_m_axi_U->I_RRESP(D_BUS_RRESP);
    inverse_img_D_BUS_m_axi_U->I_RLAST(D_BUS_RLAST);
    inverse_img_D_BUS_m_axi_U->I_AWVALID(Loop_1_proc_U0_m_axi_img_in_AWVALID);
    inverse_img_D_BUS_m_axi_U->I_AWREADY(D_BUS_AWREADY);
    inverse_img_D_BUS_m_axi_U->I_AWADDR(Loop_1_proc_U0_m_axi_img_in_AWADDR);
    inverse_img_D_BUS_m_axi_U->I_AWID(Loop_1_proc_U0_m_axi_img_in_AWID);
    inverse_img_D_BUS_m_axi_U->I_AWLEN(Loop_1_proc_U0_m_axi_img_in_AWLEN);
    inverse_img_D_BUS_m_axi_U->I_AWSIZE(Loop_1_proc_U0_m_axi_img_in_AWSIZE);
    inverse_img_D_BUS_m_axi_U->I_AWLOCK(Loop_1_proc_U0_m_axi_img_in_AWLOCK);
    inverse_img_D_BUS_m_axi_U->I_AWCACHE(Loop_1_proc_U0_m_axi_img_in_AWCACHE);
    inverse_img_D_BUS_m_axi_U->I_AWQOS(Loop_1_proc_U0_m_axi_img_in_AWQOS);
    inverse_img_D_BUS_m_axi_U->I_AWPROT(Loop_1_proc_U0_m_axi_img_in_AWPROT);
    inverse_img_D_BUS_m_axi_U->I_AWUSER(Loop_1_proc_U0_m_axi_img_in_AWUSER);
    inverse_img_D_BUS_m_axi_U->I_AWBURST(Loop_1_proc_U0_m_axi_img_in_AWBURST);
    inverse_img_D_BUS_m_axi_U->I_AWREGION(Loop_1_proc_U0_m_axi_img_in_AWREGION);
    inverse_img_D_BUS_m_axi_U->I_WVALID(Loop_1_proc_U0_m_axi_img_in_WVALID);
    inverse_img_D_BUS_m_axi_U->I_WREADY(D_BUS_WREADY);
    inverse_img_D_BUS_m_axi_U->I_WDATA(Loop_1_proc_U0_m_axi_img_in_WDATA);
    inverse_img_D_BUS_m_axi_U->I_WID(Loop_1_proc_U0_m_axi_img_in_WID);
    inverse_img_D_BUS_m_axi_U->I_WUSER(Loop_1_proc_U0_m_axi_img_in_WUSER);
    inverse_img_D_BUS_m_axi_U->I_WLAST(Loop_1_proc_U0_m_axi_img_in_WLAST);
    inverse_img_D_BUS_m_axi_U->I_WSTRB(Loop_1_proc_U0_m_axi_img_in_WSTRB);
    inverse_img_D_BUS_m_axi_U->I_BVALID(D_BUS_BVALID);
    inverse_img_D_BUS_m_axi_U->I_BREADY(Loop_1_proc_U0_m_axi_img_in_BREADY);
    inverse_img_D_BUS_m_axi_U->I_BRESP(D_BUS_BRESP);
    inverse_img_D_BUS_m_axi_U->I_BID(D_BUS_BID);
    inverse_img_D_BUS_m_axi_U->I_BUSER(D_BUS_BUSER);
    Loop_1_proc_U0 = new Loop_1_proc("Loop_1_proc_U0");
    Loop_1_proc_U0->ap_clk(ap_clk);
    Loop_1_proc_U0->ap_rst(ap_rst_n_inv);
    Loop_1_proc_U0->ap_start(Loop_1_proc_U0_ap_start);
    Loop_1_proc_U0->ap_done(Loop_1_proc_U0_ap_done);
    Loop_1_proc_U0->ap_continue(Loop_1_proc_U0_ap_continue);
    Loop_1_proc_U0->ap_idle(Loop_1_proc_U0_ap_idle);
    Loop_1_proc_U0->ap_ready(Loop_1_proc_U0_ap_ready);
    Loop_1_proc_U0->m_axi_img_in_AWVALID(Loop_1_proc_U0_m_axi_img_in_AWVALID);
    Loop_1_proc_U0->m_axi_img_in_AWREADY(D_BUS_AWREADY);
    Loop_1_proc_U0->m_axi_img_in_AWADDR(Loop_1_proc_U0_m_axi_img_in_AWADDR);
    Loop_1_proc_U0->m_axi_img_in_AWID(Loop_1_proc_U0_m_axi_img_in_AWID);
    Loop_1_proc_U0->m_axi_img_in_AWLEN(Loop_1_proc_U0_m_axi_img_in_AWLEN);
    Loop_1_proc_U0->m_axi_img_in_AWSIZE(Loop_1_proc_U0_m_axi_img_in_AWSIZE);
    Loop_1_proc_U0->m_axi_img_in_AWBURST(Loop_1_proc_U0_m_axi_img_in_AWBURST);
    Loop_1_proc_U0->m_axi_img_in_AWLOCK(Loop_1_proc_U0_m_axi_img_in_AWLOCK);
    Loop_1_proc_U0->m_axi_img_in_AWCACHE(Loop_1_proc_U0_m_axi_img_in_AWCACHE);
    Loop_1_proc_U0->m_axi_img_in_AWPROT(Loop_1_proc_U0_m_axi_img_in_AWPROT);
    Loop_1_proc_U0->m_axi_img_in_AWQOS(Loop_1_proc_U0_m_axi_img_in_AWQOS);
    Loop_1_proc_U0->m_axi_img_in_AWREGION(Loop_1_proc_U0_m_axi_img_in_AWREGION);
    Loop_1_proc_U0->m_axi_img_in_AWUSER(Loop_1_proc_U0_m_axi_img_in_AWUSER);
    Loop_1_proc_U0->m_axi_img_in_WVALID(Loop_1_proc_U0_m_axi_img_in_WVALID);
    Loop_1_proc_U0->m_axi_img_in_WREADY(D_BUS_WREADY);
    Loop_1_proc_U0->m_axi_img_in_WDATA(Loop_1_proc_U0_m_axi_img_in_WDATA);
    Loop_1_proc_U0->m_axi_img_in_WSTRB(Loop_1_proc_U0_m_axi_img_in_WSTRB);
    Loop_1_proc_U0->m_axi_img_in_WLAST(Loop_1_proc_U0_m_axi_img_in_WLAST);
    Loop_1_proc_U0->m_axi_img_in_WID(Loop_1_proc_U0_m_axi_img_in_WID);
    Loop_1_proc_U0->m_axi_img_in_WUSER(Loop_1_proc_U0_m_axi_img_in_WUSER);
    Loop_1_proc_U0->m_axi_img_in_ARVALID(Loop_1_proc_U0_m_axi_img_in_ARVALID);
    Loop_1_proc_U0->m_axi_img_in_ARREADY(D_BUS_ARREADY);
    Loop_1_proc_U0->m_axi_img_in_ARADDR(Loop_1_proc_U0_m_axi_img_in_ARADDR);
    Loop_1_proc_U0->m_axi_img_in_ARID(Loop_1_proc_U0_m_axi_img_in_ARID);
    Loop_1_proc_U0->m_axi_img_in_ARLEN(Loop_1_proc_U0_m_axi_img_in_ARLEN);
    Loop_1_proc_U0->m_axi_img_in_ARSIZE(Loop_1_proc_U0_m_axi_img_in_ARSIZE);
    Loop_1_proc_U0->m_axi_img_in_ARBURST(Loop_1_proc_U0_m_axi_img_in_ARBURST);
    Loop_1_proc_U0->m_axi_img_in_ARLOCK(Loop_1_proc_U0_m_axi_img_in_ARLOCK);
    Loop_1_proc_U0->m_axi_img_in_ARCACHE(Loop_1_proc_U0_m_axi_img_in_ARCACHE);
    Loop_1_proc_U0->m_axi_img_in_ARPROT(Loop_1_proc_U0_m_axi_img_in_ARPROT);
    Loop_1_proc_U0->m_axi_img_in_ARQOS(Loop_1_proc_U0_m_axi_img_in_ARQOS);
    Loop_1_proc_U0->m_axi_img_in_ARREGION(Loop_1_proc_U0_m_axi_img_in_ARREGION);
    Loop_1_proc_U0->m_axi_img_in_ARUSER(Loop_1_proc_U0_m_axi_img_in_ARUSER);
    Loop_1_proc_U0->m_axi_img_in_RVALID(D_BUS_RVALID);
    Loop_1_proc_U0->m_axi_img_in_RREADY(Loop_1_proc_U0_m_axi_img_in_RREADY);
    Loop_1_proc_U0->m_axi_img_in_RDATA(D_BUS_RDATA);
    Loop_1_proc_U0->m_axi_img_in_RLAST(D_BUS_RLAST);
    Loop_1_proc_U0->m_axi_img_in_RID(D_BUS_RID);
    Loop_1_proc_U0->m_axi_img_in_RUSER(D_BUS_RUSER);
    Loop_1_proc_U0->m_axi_img_in_RRESP(D_BUS_RRESP);
    Loop_1_proc_U0->m_axi_img_in_BVALID(D_BUS_BVALID);
    Loop_1_proc_U0->m_axi_img_in_BREADY(Loop_1_proc_U0_m_axi_img_in_BREADY);
    Loop_1_proc_U0->m_axi_img_in_BRESP(D_BUS_BRESP);
    Loop_1_proc_U0->m_axi_img_in_BID(D_BUS_BID);
    Loop_1_proc_U0->m_axi_img_in_BUSER(D_BUS_BUSER);
    Loop_1_proc_U0->img_in_offset(img_in);
    Loop_1_proc_U0->img_out_offset(img_out);

    SC_METHOD(thread_Loop_1_proc_U0_ap_continue);

    SC_METHOD(thread_Loop_1_proc_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_Loop_1_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_1_proc_U0_start_write);

    SC_METHOD(thread_ap_done);
    sensitive << ( Loop_1_proc_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( Loop_1_proc_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( Loop_1_proc_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Loop_1_proc_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( Loop_1_proc_U0_ap_ready );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "inverse_img_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_D_BUS_AWVALID, "(port)s_axi_D_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_D_BUS_AWREADY, "(port)s_axi_D_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_D_BUS_AWADDR, "(port)s_axi_D_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_D_BUS_WVALID, "(port)s_axi_D_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_D_BUS_WREADY, "(port)s_axi_D_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_D_BUS_WDATA, "(port)s_axi_D_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_D_BUS_WSTRB, "(port)s_axi_D_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_D_BUS_ARVALID, "(port)s_axi_D_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_D_BUS_ARREADY, "(port)s_axi_D_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_D_BUS_ARADDR, "(port)s_axi_D_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_D_BUS_RVALID, "(port)s_axi_D_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_D_BUS_RREADY, "(port)s_axi_D_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_D_BUS_RDATA, "(port)s_axi_D_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_D_BUS_RRESP, "(port)s_axi_D_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_D_BUS_BVALID, "(port)s_axi_D_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_D_BUS_BREADY, "(port)s_axi_D_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_D_BUS_BRESP, "(port)s_axi_D_BUS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axi_D_BUS_AWVALID, "(port)m_axi_D_BUS_AWVALID");
    sc_trace(mVcdFile, m_axi_D_BUS_AWREADY, "(port)m_axi_D_BUS_AWREADY");
    sc_trace(mVcdFile, m_axi_D_BUS_AWADDR, "(port)m_axi_D_BUS_AWADDR");
    sc_trace(mVcdFile, m_axi_D_BUS_AWID, "(port)m_axi_D_BUS_AWID");
    sc_trace(mVcdFile, m_axi_D_BUS_AWLEN, "(port)m_axi_D_BUS_AWLEN");
    sc_trace(mVcdFile, m_axi_D_BUS_AWSIZE, "(port)m_axi_D_BUS_AWSIZE");
    sc_trace(mVcdFile, m_axi_D_BUS_AWBURST, "(port)m_axi_D_BUS_AWBURST");
    sc_trace(mVcdFile, m_axi_D_BUS_AWLOCK, "(port)m_axi_D_BUS_AWLOCK");
    sc_trace(mVcdFile, m_axi_D_BUS_AWCACHE, "(port)m_axi_D_BUS_AWCACHE");
    sc_trace(mVcdFile, m_axi_D_BUS_AWPROT, "(port)m_axi_D_BUS_AWPROT");
    sc_trace(mVcdFile, m_axi_D_BUS_AWQOS, "(port)m_axi_D_BUS_AWQOS");
    sc_trace(mVcdFile, m_axi_D_BUS_AWREGION, "(port)m_axi_D_BUS_AWREGION");
    sc_trace(mVcdFile, m_axi_D_BUS_AWUSER, "(port)m_axi_D_BUS_AWUSER");
    sc_trace(mVcdFile, m_axi_D_BUS_WVALID, "(port)m_axi_D_BUS_WVALID");
    sc_trace(mVcdFile, m_axi_D_BUS_WREADY, "(port)m_axi_D_BUS_WREADY");
    sc_trace(mVcdFile, m_axi_D_BUS_WDATA, "(port)m_axi_D_BUS_WDATA");
    sc_trace(mVcdFile, m_axi_D_BUS_WSTRB, "(port)m_axi_D_BUS_WSTRB");
    sc_trace(mVcdFile, m_axi_D_BUS_WLAST, "(port)m_axi_D_BUS_WLAST");
    sc_trace(mVcdFile, m_axi_D_BUS_WID, "(port)m_axi_D_BUS_WID");
    sc_trace(mVcdFile, m_axi_D_BUS_WUSER, "(port)m_axi_D_BUS_WUSER");
    sc_trace(mVcdFile, m_axi_D_BUS_ARVALID, "(port)m_axi_D_BUS_ARVALID");
    sc_trace(mVcdFile, m_axi_D_BUS_ARREADY, "(port)m_axi_D_BUS_ARREADY");
    sc_trace(mVcdFile, m_axi_D_BUS_ARADDR, "(port)m_axi_D_BUS_ARADDR");
    sc_trace(mVcdFile, m_axi_D_BUS_ARID, "(port)m_axi_D_BUS_ARID");
    sc_trace(mVcdFile, m_axi_D_BUS_ARLEN, "(port)m_axi_D_BUS_ARLEN");
    sc_trace(mVcdFile, m_axi_D_BUS_ARSIZE, "(port)m_axi_D_BUS_ARSIZE");
    sc_trace(mVcdFile, m_axi_D_BUS_ARBURST, "(port)m_axi_D_BUS_ARBURST");
    sc_trace(mVcdFile, m_axi_D_BUS_ARLOCK, "(port)m_axi_D_BUS_ARLOCK");
    sc_trace(mVcdFile, m_axi_D_BUS_ARCACHE, "(port)m_axi_D_BUS_ARCACHE");
    sc_trace(mVcdFile, m_axi_D_BUS_ARPROT, "(port)m_axi_D_BUS_ARPROT");
    sc_trace(mVcdFile, m_axi_D_BUS_ARQOS, "(port)m_axi_D_BUS_ARQOS");
    sc_trace(mVcdFile, m_axi_D_BUS_ARREGION, "(port)m_axi_D_BUS_ARREGION");
    sc_trace(mVcdFile, m_axi_D_BUS_ARUSER, "(port)m_axi_D_BUS_ARUSER");
    sc_trace(mVcdFile, m_axi_D_BUS_RVALID, "(port)m_axi_D_BUS_RVALID");
    sc_trace(mVcdFile, m_axi_D_BUS_RREADY, "(port)m_axi_D_BUS_RREADY");
    sc_trace(mVcdFile, m_axi_D_BUS_RDATA, "(port)m_axi_D_BUS_RDATA");
    sc_trace(mVcdFile, m_axi_D_BUS_RLAST, "(port)m_axi_D_BUS_RLAST");
    sc_trace(mVcdFile, m_axi_D_BUS_RID, "(port)m_axi_D_BUS_RID");
    sc_trace(mVcdFile, m_axi_D_BUS_RUSER, "(port)m_axi_D_BUS_RUSER");
    sc_trace(mVcdFile, m_axi_D_BUS_RRESP, "(port)m_axi_D_BUS_RRESP");
    sc_trace(mVcdFile, m_axi_D_BUS_BVALID, "(port)m_axi_D_BUS_BVALID");
    sc_trace(mVcdFile, m_axi_D_BUS_BREADY, "(port)m_axi_D_BUS_BREADY");
    sc_trace(mVcdFile, m_axi_D_BUS_BRESP, "(port)m_axi_D_BUS_BRESP");
    sc_trace(mVcdFile, m_axi_D_BUS_BID, "(port)m_axi_D_BUS_BID");
    sc_trace(mVcdFile, m_axi_D_BUS_BUSER, "(port)m_axi_D_BUS_BUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, img_in, "img_in");
    sc_trace(mVcdFile, img_out, "img_out");
    sc_trace(mVcdFile, D_BUS_AWREADY, "D_BUS_AWREADY");
    sc_trace(mVcdFile, D_BUS_WREADY, "D_BUS_WREADY");
    sc_trace(mVcdFile, D_BUS_ARREADY, "D_BUS_ARREADY");
    sc_trace(mVcdFile, D_BUS_RVALID, "D_BUS_RVALID");
    sc_trace(mVcdFile, D_BUS_RDATA, "D_BUS_RDATA");
    sc_trace(mVcdFile, D_BUS_RLAST, "D_BUS_RLAST");
    sc_trace(mVcdFile, D_BUS_RID, "D_BUS_RID");
    sc_trace(mVcdFile, D_BUS_RUSER, "D_BUS_RUSER");
    sc_trace(mVcdFile, D_BUS_RRESP, "D_BUS_RRESP");
    sc_trace(mVcdFile, D_BUS_BVALID, "D_BUS_BVALID");
    sc_trace(mVcdFile, D_BUS_BRESP, "D_BUS_BRESP");
    sc_trace(mVcdFile, D_BUS_BID, "D_BUS_BID");
    sc_trace(mVcdFile, D_BUS_BUSER, "D_BUS_BUSER");
    sc_trace(mVcdFile, Loop_1_proc_U0_ap_start, "Loop_1_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_1_proc_U0_ap_done, "Loop_1_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_1_proc_U0_ap_continue, "Loop_1_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_1_proc_U0_ap_idle, "Loop_1_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_1_proc_U0_ap_ready, "Loop_1_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWVALID, "Loop_1_proc_U0_m_axi_img_in_AWVALID");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWADDR, "Loop_1_proc_U0_m_axi_img_in_AWADDR");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWID, "Loop_1_proc_U0_m_axi_img_in_AWID");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWLEN, "Loop_1_proc_U0_m_axi_img_in_AWLEN");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWSIZE, "Loop_1_proc_U0_m_axi_img_in_AWSIZE");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWBURST, "Loop_1_proc_U0_m_axi_img_in_AWBURST");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWLOCK, "Loop_1_proc_U0_m_axi_img_in_AWLOCK");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWCACHE, "Loop_1_proc_U0_m_axi_img_in_AWCACHE");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWPROT, "Loop_1_proc_U0_m_axi_img_in_AWPROT");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWQOS, "Loop_1_proc_U0_m_axi_img_in_AWQOS");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWREGION, "Loop_1_proc_U0_m_axi_img_in_AWREGION");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_AWUSER, "Loop_1_proc_U0_m_axi_img_in_AWUSER");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_WVALID, "Loop_1_proc_U0_m_axi_img_in_WVALID");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_WDATA, "Loop_1_proc_U0_m_axi_img_in_WDATA");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_WSTRB, "Loop_1_proc_U0_m_axi_img_in_WSTRB");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_WLAST, "Loop_1_proc_U0_m_axi_img_in_WLAST");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_WID, "Loop_1_proc_U0_m_axi_img_in_WID");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_WUSER, "Loop_1_proc_U0_m_axi_img_in_WUSER");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARVALID, "Loop_1_proc_U0_m_axi_img_in_ARVALID");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARADDR, "Loop_1_proc_U0_m_axi_img_in_ARADDR");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARID, "Loop_1_proc_U0_m_axi_img_in_ARID");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARLEN, "Loop_1_proc_U0_m_axi_img_in_ARLEN");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARSIZE, "Loop_1_proc_U0_m_axi_img_in_ARSIZE");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARBURST, "Loop_1_proc_U0_m_axi_img_in_ARBURST");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARLOCK, "Loop_1_proc_U0_m_axi_img_in_ARLOCK");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARCACHE, "Loop_1_proc_U0_m_axi_img_in_ARCACHE");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARPROT, "Loop_1_proc_U0_m_axi_img_in_ARPROT");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARQOS, "Loop_1_proc_U0_m_axi_img_in_ARQOS");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARREGION, "Loop_1_proc_U0_m_axi_img_in_ARREGION");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_ARUSER, "Loop_1_proc_U0_m_axi_img_in_ARUSER");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_RREADY, "Loop_1_proc_U0_m_axi_img_in_RREADY");
    sc_trace(mVcdFile, Loop_1_proc_U0_m_axi_img_in_BREADY, "Loop_1_proc_U0_m_axi_img_in_BREADY");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, Loop_1_proc_U0_start_full_n, "Loop_1_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_1_proc_U0_start_write, "Loop_1_proc_U0_start_write");
#endif

    }
    mHdltvinHandle.open("inverse_img.hdltvin.dat");
    mHdltvoutHandle.open("inverse_img.hdltvout.dat");
}

inverse_img::~inverse_img() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete inverse_img_D_BUS_s_axi_U;
    delete inverse_img_D_BUS_m_axi_U;
    delete Loop_1_proc_U0;
}

void inverse_img::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void inverse_img::thread_Loop_1_proc_U0_ap_continue() {
    Loop_1_proc_U0_ap_continue = ap_const_logic_1;
}

void inverse_img::thread_Loop_1_proc_U0_ap_start() {
    Loop_1_proc_U0_ap_start = ap_start.read();
}

void inverse_img::thread_Loop_1_proc_U0_start_full_n() {
    Loop_1_proc_U0_start_full_n = ap_const_logic_1;
}

void inverse_img::thread_Loop_1_proc_U0_start_write() {
    Loop_1_proc_U0_start_write = ap_const_logic_0;
}

void inverse_img::thread_ap_done() {
    ap_done = Loop_1_proc_U0_ap_done.read();
}

void inverse_img::thread_ap_idle() {
    ap_idle = Loop_1_proc_U0_ap_idle.read();
}

void inverse_img::thread_ap_ready() {
    ap_ready = Loop_1_proc_U0_ap_ready.read();
}

void inverse_img::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void inverse_img::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void inverse_img::thread_ap_sync_done() {
    ap_sync_done = Loop_1_proc_U0_ap_done.read();
}

void inverse_img::thread_ap_sync_ready() {
    ap_sync_ready = Loop_1_proc_U0_ap_ready.read();
}

void inverse_img::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_D_BUS_AWVALID\" :  \"" << s_axi_D_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_D_BUS_AWREADY\" :  \"" << s_axi_D_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_D_BUS_AWADDR\" :  \"" << s_axi_D_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_D_BUS_WVALID\" :  \"" << s_axi_D_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_D_BUS_WREADY\" :  \"" << s_axi_D_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_D_BUS_WDATA\" :  \"" << s_axi_D_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_D_BUS_WSTRB\" :  \"" << s_axi_D_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_D_BUS_ARVALID\" :  \"" << s_axi_D_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_D_BUS_ARREADY\" :  \"" << s_axi_D_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_D_BUS_ARADDR\" :  \"" << s_axi_D_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_D_BUS_RVALID\" :  \"" << s_axi_D_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_D_BUS_RREADY\" :  \"" << s_axi_D_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_D_BUS_RDATA\" :  \"" << s_axi_D_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_D_BUS_RRESP\" :  \"" << s_axi_D_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_D_BUS_BVALID\" :  \"" << s_axi_D_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_D_BUS_BREADY\" :  \"" << s_axi_D_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_D_BUS_BRESP\" :  \"" << s_axi_D_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWVALID\" :  \"" << m_axi_D_BUS_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_AWREADY\" :  \"" << m_axi_D_BUS_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWADDR\" :  \"" << m_axi_D_BUS_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWID\" :  \"" << m_axi_D_BUS_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWLEN\" :  \"" << m_axi_D_BUS_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWSIZE\" :  \"" << m_axi_D_BUS_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWBURST\" :  \"" << m_axi_D_BUS_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWLOCK\" :  \"" << m_axi_D_BUS_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWCACHE\" :  \"" << m_axi_D_BUS_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWPROT\" :  \"" << m_axi_D_BUS_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWQOS\" :  \"" << m_axi_D_BUS_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWREGION\" :  \"" << m_axi_D_BUS_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_AWUSER\" :  \"" << m_axi_D_BUS_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_WVALID\" :  \"" << m_axi_D_BUS_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_WREADY\" :  \"" << m_axi_D_BUS_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_WDATA\" :  \"" << m_axi_D_BUS_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_WSTRB\" :  \"" << m_axi_D_BUS_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_WLAST\" :  \"" << m_axi_D_BUS_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_WID\" :  \"" << m_axi_D_BUS_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_WUSER\" :  \"" << m_axi_D_BUS_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARVALID\" :  \"" << m_axi_D_BUS_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_ARREADY\" :  \"" << m_axi_D_BUS_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARADDR\" :  \"" << m_axi_D_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARID\" :  \"" << m_axi_D_BUS_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARLEN\" :  \"" << m_axi_D_BUS_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARSIZE\" :  \"" << m_axi_D_BUS_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARBURST\" :  \"" << m_axi_D_BUS_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARLOCK\" :  \"" << m_axi_D_BUS_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARCACHE\" :  \"" << m_axi_D_BUS_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARPROT\" :  \"" << m_axi_D_BUS_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARQOS\" :  \"" << m_axi_D_BUS_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARREGION\" :  \"" << m_axi_D_BUS_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_ARUSER\" :  \"" << m_axi_D_BUS_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_RVALID\" :  \"" << m_axi_D_BUS_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_RREADY\" :  \"" << m_axi_D_BUS_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_RDATA\" :  \"" << m_axi_D_BUS_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_RLAST\" :  \"" << m_axi_D_BUS_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_RID\" :  \"" << m_axi_D_BUS_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_RUSER\" :  \"" << m_axi_D_BUS_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_RRESP\" :  \"" << m_axi_D_BUS_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_BVALID\" :  \"" << m_axi_D_BUS_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_D_BUS_BREADY\" :  \"" << m_axi_D_BUS_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_BRESP\" :  \"" << m_axi_D_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_BID\" :  \"" << m_axi_D_BUS_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_D_BUS_BUSER\" :  \"" << m_axi_D_BUS_BUSER.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

