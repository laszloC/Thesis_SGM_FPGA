// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_1_proc_HH_
#define _Loop_1_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_1_proc : public sc_module {
    // Port declarations 54
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_img_in_AWVALID;
    sc_in< sc_logic > m_axi_img_in_AWREADY;
    sc_out< sc_lv<32> > m_axi_img_in_AWADDR;
    sc_out< sc_lv<1> > m_axi_img_in_AWID;
    sc_out< sc_lv<32> > m_axi_img_in_AWLEN;
    sc_out< sc_lv<3> > m_axi_img_in_AWSIZE;
    sc_out< sc_lv<2> > m_axi_img_in_AWBURST;
    sc_out< sc_lv<2> > m_axi_img_in_AWLOCK;
    sc_out< sc_lv<4> > m_axi_img_in_AWCACHE;
    sc_out< sc_lv<3> > m_axi_img_in_AWPROT;
    sc_out< sc_lv<4> > m_axi_img_in_AWQOS;
    sc_out< sc_lv<4> > m_axi_img_in_AWREGION;
    sc_out< sc_lv<1> > m_axi_img_in_AWUSER;
    sc_out< sc_logic > m_axi_img_in_WVALID;
    sc_in< sc_logic > m_axi_img_in_WREADY;
    sc_out< sc_lv<8> > m_axi_img_in_WDATA;
    sc_out< sc_lv<1> > m_axi_img_in_WSTRB;
    sc_out< sc_logic > m_axi_img_in_WLAST;
    sc_out< sc_lv<1> > m_axi_img_in_WID;
    sc_out< sc_lv<1> > m_axi_img_in_WUSER;
    sc_out< sc_logic > m_axi_img_in_ARVALID;
    sc_in< sc_logic > m_axi_img_in_ARREADY;
    sc_out< sc_lv<32> > m_axi_img_in_ARADDR;
    sc_out< sc_lv<1> > m_axi_img_in_ARID;
    sc_out< sc_lv<32> > m_axi_img_in_ARLEN;
    sc_out< sc_lv<3> > m_axi_img_in_ARSIZE;
    sc_out< sc_lv<2> > m_axi_img_in_ARBURST;
    sc_out< sc_lv<2> > m_axi_img_in_ARLOCK;
    sc_out< sc_lv<4> > m_axi_img_in_ARCACHE;
    sc_out< sc_lv<3> > m_axi_img_in_ARPROT;
    sc_out< sc_lv<4> > m_axi_img_in_ARQOS;
    sc_out< sc_lv<4> > m_axi_img_in_ARREGION;
    sc_out< sc_lv<1> > m_axi_img_in_ARUSER;
    sc_in< sc_logic > m_axi_img_in_RVALID;
    sc_out< sc_logic > m_axi_img_in_RREADY;
    sc_in< sc_lv<8> > m_axi_img_in_RDATA;
    sc_in< sc_logic > m_axi_img_in_RLAST;
    sc_in< sc_lv<1> > m_axi_img_in_RID;
    sc_in< sc_lv<1> > m_axi_img_in_RUSER;
    sc_in< sc_lv<2> > m_axi_img_in_RRESP;
    sc_in< sc_logic > m_axi_img_in_BVALID;
    sc_out< sc_logic > m_axi_img_in_BREADY;
    sc_in< sc_lv<2> > m_axi_img_in_BRESP;
    sc_in< sc_lv<1> > m_axi_img_in_BID;
    sc_in< sc_lv<1> > m_axi_img_in_BUSER;
    sc_in< sc_lv<32> > img_in_offset;
    sc_in< sc_lv<32> > img_out_offset;


    // Module declarations
    Loop_1_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_1_proc);

    ~Loop_1_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > img_in_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > img_in_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > img_in_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > img_in_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > img_in_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<33> > sext_cast_fu_101_p1;
    sc_signal< sc_lv<33> > sext_cast_reg_160;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<33> > sext6_cast_fu_105_p1;
    sc_signal< sc_lv<33> > sext6_cast_reg_165;
    sc_signal< sc_lv<16> > i_fu_115_p2;
    sc_signal< sc_lv<16> > i_reg_173;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > img_in_addr_reg_178;
    sc_signal< sc_lv<1> > tmp_i_fu_109_p2;
    sc_signal< sc_lv<32> > img_in_addr_1_reg_184;
    sc_signal< sc_lv<8> > img_in_addr_read_reg_190;
    sc_signal< sc_lv<8> > tmp_2_i_fu_155_p2;
    sc_signal< sc_lv<8> > tmp_2_i_reg_195;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_img_in_AWREADY;
    sc_signal< sc_lv<16> > i_0_i_i_reg_90;
    sc_signal< sc_lv<64> > sum3_cast_fu_130_p1;
    sc_signal< sc_lv<64> > sum9_cast_fu_145_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_img_in_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_img_in_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_img_in_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_img_in_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_img_in_WREADY;
    sc_signal< sc_lv<33> > tmp_1_i_cast_fu_121_p1;
    sc_signal< sc_lv<33> > sum3_fu_125_p2;
    sc_signal< sc_lv<33> > sum9_fu_140_p2;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_state5;
    static const sc_lv<17> ap_ST_fsm_state6;
    static const sc_lv<17> ap_ST_fsm_state7;
    static const sc_lv<17> ap_ST_fsm_state8;
    static const sc_lv<17> ap_ST_fsm_state9;
    static const sc_lv<17> ap_ST_fsm_state10;
    static const sc_lv<17> ap_ST_fsm_state11;
    static const sc_lv<17> ap_ST_fsm_state12;
    static const sc_lv<17> ap_ST_fsm_state13;
    static const sc_lv<17> ap_ST_fsm_state14;
    static const sc_lv<17> ap_ST_fsm_state15;
    static const sc_lv<17> ap_ST_fsm_state16;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_A53C;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_img_in_ARREADY();
    void thread_ap_sig_ioackin_m_axi_img_in_AWREADY();
    void thread_ap_sig_ioackin_m_axi_img_in_WREADY();
    void thread_i_fu_115_p2();
    void thread_img_in_blk_n_AR();
    void thread_img_in_blk_n_AW();
    void thread_img_in_blk_n_B();
    void thread_img_in_blk_n_R();
    void thread_img_in_blk_n_W();
    void thread_m_axi_img_in_ARADDR();
    void thread_m_axi_img_in_ARBURST();
    void thread_m_axi_img_in_ARCACHE();
    void thread_m_axi_img_in_ARID();
    void thread_m_axi_img_in_ARLEN();
    void thread_m_axi_img_in_ARLOCK();
    void thread_m_axi_img_in_ARPROT();
    void thread_m_axi_img_in_ARQOS();
    void thread_m_axi_img_in_ARREGION();
    void thread_m_axi_img_in_ARSIZE();
    void thread_m_axi_img_in_ARUSER();
    void thread_m_axi_img_in_ARVALID();
    void thread_m_axi_img_in_AWADDR();
    void thread_m_axi_img_in_AWBURST();
    void thread_m_axi_img_in_AWCACHE();
    void thread_m_axi_img_in_AWID();
    void thread_m_axi_img_in_AWLEN();
    void thread_m_axi_img_in_AWLOCK();
    void thread_m_axi_img_in_AWPROT();
    void thread_m_axi_img_in_AWQOS();
    void thread_m_axi_img_in_AWREGION();
    void thread_m_axi_img_in_AWSIZE();
    void thread_m_axi_img_in_AWUSER();
    void thread_m_axi_img_in_AWVALID();
    void thread_m_axi_img_in_BREADY();
    void thread_m_axi_img_in_RREADY();
    void thread_m_axi_img_in_WDATA();
    void thread_m_axi_img_in_WID();
    void thread_m_axi_img_in_WLAST();
    void thread_m_axi_img_in_WSTRB();
    void thread_m_axi_img_in_WUSER();
    void thread_m_axi_img_in_WVALID();
    void thread_sext6_cast_fu_105_p1();
    void thread_sext_cast_fu_101_p1();
    void thread_sum3_cast_fu_130_p1();
    void thread_sum3_fu_125_p2();
    void thread_sum9_cast_fu_145_p1();
    void thread_sum9_fu_140_p2();
    void thread_tmp_1_i_cast_fu_121_p1();
    void thread_tmp_2_i_fu_155_p2();
    void thread_tmp_i_fu_109_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
