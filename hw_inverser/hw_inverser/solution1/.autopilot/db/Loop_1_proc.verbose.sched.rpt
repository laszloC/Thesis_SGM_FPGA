

================================================================
== Vivado HLS Report for 'Loop_1_proc'
================================================================
* Date:           Fri May 31 13:35:31 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        hw_inverser
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  676801|  676801|  676801|  676801|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+--------+--------+----------+-----------+-----------+-------+----------+
        |          |     Latency     | Iteration|  Initiation Interval  |  Trip |          |
        | Loop Name|   min  |   max  |  Latency |  achieved |   target  | Count | Pipelined|
        +----------+--------+--------+----------+-----------+-----------+-------+----------+
        |- Loop 1  |  676800|  676800|        16|          -|          -|  42300|    no    |
        +----------+--------+--------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp_i)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %img_in, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 42300, [6 x i8]* @p_str2, [6 x i8]* @p_str4, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 18 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %img_in, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 42300, [6 x i8]* @p_str2, [6 x i8]* @p_str4, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 19 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%img_out_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %img_out_offset)" [hw_inverser/inv.cpp:24]   --->   Operation 20 'read' 'img_out_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%img_in_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %img_in_offset)" [hw_inverser/inv.cpp:24]   --->   Operation 21 'read' 'img_in_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sext_cast = sext i32 %img_in_offset_read to i33" [hw_inverser/inv.cpp:24]   --->   Operation 22 'sext' 'sext_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%sext6_cast = sext i32 %img_out_offset_read to i33" [hw_inverser/inv.cpp:24]   --->   Operation 23 'sext' 'sext6_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.76ns)   --->   "br label %0"   --->   Operation 24 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.55>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%i_0_i_i = phi i16 [ 0, %newFuncRoot ], [ %i, %1 ]"   --->   Operation 25 'phi' 'i_0_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (2.42ns)   --->   "%tmp_i = icmp eq i16 %i_0_i_i, -23236" [hw_inverser/inv.cpp:23]   --->   Operation 26 'icmp' 'tmp_i' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 42300, i64 42300, i64 42300) nounwind"   --->   Operation 27 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (2.07ns)   --->   "%i = add i16 %i_0_i_i, 1" [hw_inverser/inv.cpp:23]   --->   Operation 28 'add' 'i' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %tmp_i, label %inverse_img_.exit.exitStub, label %1" [hw_inverser/inv.cpp:23]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_1_i_cast = zext i16 %i_0_i_i to i33" [hw_inverser/inv.cpp:24]   --->   Operation 30 'zext' 'tmp_1_i_cast' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (2.55ns)   --->   "%sum3 = add i33 %sext_cast, %tmp_1_i_cast" [hw_inverser/inv.cpp:24]   --->   Operation 31 'add' 'sum3' <Predicate = (!tmp_i)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%sum3_cast = sext i33 %sum3 to i64" [hw_inverser/inv.cpp:24]   --->   Operation 32 'sext' 'sum3_cast' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%img_in_addr = getelementptr i8* %img_in, i64 %sum3_cast" [hw_inverser/inv.cpp:24]   --->   Operation 33 'getelementptr' 'img_in_addr' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (2.55ns)   --->   "%sum9 = add i33 %sext6_cast, %tmp_1_i_cast" [hw_inverser/inv.cpp:24]   --->   Operation 34 'add' 'sum9' <Predicate = (!tmp_i)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%sum9_cast = sext i33 %sum9 to i64" [hw_inverser/inv.cpp:24]   --->   Operation 35 'sext' 'sum9_cast' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%img_in_addr_1 = getelementptr i8* %img_in, i64 %sum9_cast" [hw_inverser/inv.cpp:24]   --->   Operation 36 'getelementptr' 'img_in_addr_1' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 37 'ret' <Predicate = (tmp_i)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 38 [7/7] (8.75ns)   --->   "%img_in_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %img_in_addr, i32 1)" [hw_inverser/inv.cpp:24]   --->   Operation 38 'readreq' 'img_in_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 39 [6/7] (8.75ns)   --->   "%img_in_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %img_in_addr, i32 1)" [hw_inverser/inv.cpp:24]   --->   Operation 39 'readreq' 'img_in_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 40 [5/7] (8.75ns)   --->   "%img_in_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %img_in_addr, i32 1)" [hw_inverser/inv.cpp:24]   --->   Operation 40 'readreq' 'img_in_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 41 [4/7] (8.75ns)   --->   "%img_in_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %img_in_addr, i32 1)" [hw_inverser/inv.cpp:24]   --->   Operation 41 'readreq' 'img_in_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 42 [3/7] (8.75ns)   --->   "%img_in_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %img_in_addr, i32 1)" [hw_inverser/inv.cpp:24]   --->   Operation 42 'readreq' 'img_in_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 43 [2/7] (8.75ns)   --->   "%img_in_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %img_in_addr, i32 1)" [hw_inverser/inv.cpp:24]   --->   Operation 43 'readreq' 'img_in_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 44 [1/7] (8.75ns)   --->   "%img_in_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %img_in_addr, i32 1)" [hw_inverser/inv.cpp:24]   --->   Operation 44 'readreq' 'img_in_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 45 [1/1] (8.75ns)   --->   "%img_in_addr_read = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %img_in_addr)" [hw_inverser/inv.cpp:24]   --->   Operation 45 'read' 'img_in_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 46 [1/1] (0.99ns)   --->   "%tmp_2_i = xor i8 %img_in_addr_read, -1" [hw_inverser/inv.cpp:24]   --->   Operation 46 'xor' 'tmp_2_i' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 47 [1/1] (8.75ns)   --->   "%img_in_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %img_in_addr_1, i32 1)" [hw_inverser/inv.cpp:24]   --->   Operation 47 'writereq' 'img_in_addr_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 48 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %img_in_addr_1, i8 %tmp_2_i, i1 true)" [hw_inverser/inv.cpp:24]   --->   Operation 48 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 49 [5/5] (8.75ns)   --->   "%img_in_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %img_in_addr_1)" [hw_inverser/inv.cpp:24]   --->   Operation 49 'writeresp' 'img_in_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 50 [4/5] (8.75ns)   --->   "%img_in_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %img_in_addr_1)" [hw_inverser/inv.cpp:24]   --->   Operation 50 'writeresp' 'img_in_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 51 [3/5] (8.75ns)   --->   "%img_in_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %img_in_addr_1)" [hw_inverser/inv.cpp:24]   --->   Operation 51 'writeresp' 'img_in_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 52 [2/5] (8.75ns)   --->   "%img_in_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %img_in_addr_1)" [hw_inverser/inv.cpp:24]   --->   Operation 52 'writeresp' 'img_in_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 53 [1/5] (8.75ns)   --->   "%img_in_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %img_in_addr_1)" [hw_inverser/inv.cpp:24]   --->   Operation 53 'writeresp' 'img_in_addr_3_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 54 [1/1] (0.00ns)   --->   "br label %0" [hw_inverser/inv.cpp:23]   --->   Operation 54 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', hw_inverser/inv.cpp:23) [12]  (1.77 ns)

 <State 2>: 2.55ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', hw_inverser/inv.cpp:23) [12]  (0 ns)
	'add' operation ('sum3', hw_inverser/inv.cpp:24) [19]  (2.55 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'img_in' (hw_inverser/inv.cpp:24) [22]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'img_in' (hw_inverser/inv.cpp:24) [22]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'img_in' (hw_inverser/inv.cpp:24) [22]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'img_in' (hw_inverser/inv.cpp:24) [22]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'img_in' (hw_inverser/inv.cpp:24) [22]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'img_in' (hw_inverser/inv.cpp:24) [22]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'img_in' (hw_inverser/inv.cpp:24) [22]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'img_in' (hw_inverser/inv.cpp:24) [23]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus request on port 'img_in' (hw_inverser/inv.cpp:24) [28]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus write on port 'img_in' (hw_inverser/inv.cpp:24) [29]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'img_in' (hw_inverser/inv.cpp:24) [30]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus access on port 'img_in' (hw_inverser/inv.cpp:24) [30]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus access on port 'img_in' (hw_inverser/inv.cpp:24) [30]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus access on port 'img_in' (hw_inverser/inv.cpp:24) [30]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus access on port 'img_in' (hw_inverser/inv.cpp:24) [30]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
