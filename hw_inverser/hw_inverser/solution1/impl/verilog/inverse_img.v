// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="inverse_img,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=676801,HLS_SYN_TPT=676802,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=859,HLS_SYN_LUT=1173,HLS_VERSION=2018_3}" *)

module inverse_img (
        s_axi_D_BUS_AWVALID,
        s_axi_D_BUS_AWREADY,
        s_axi_D_BUS_AWADDR,
        s_axi_D_BUS_WVALID,
        s_axi_D_BUS_WREADY,
        s_axi_D_BUS_WDATA,
        s_axi_D_BUS_WSTRB,
        s_axi_D_BUS_ARVALID,
        s_axi_D_BUS_ARREADY,
        s_axi_D_BUS_ARADDR,
        s_axi_D_BUS_RVALID,
        s_axi_D_BUS_RREADY,
        s_axi_D_BUS_RDATA,
        s_axi_D_BUS_RRESP,
        s_axi_D_BUS_BVALID,
        s_axi_D_BUS_BREADY,
        s_axi_D_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_D_BUS_AWVALID,
        m_axi_D_BUS_AWREADY,
        m_axi_D_BUS_AWADDR,
        m_axi_D_BUS_AWID,
        m_axi_D_BUS_AWLEN,
        m_axi_D_BUS_AWSIZE,
        m_axi_D_BUS_AWBURST,
        m_axi_D_BUS_AWLOCK,
        m_axi_D_BUS_AWCACHE,
        m_axi_D_BUS_AWPROT,
        m_axi_D_BUS_AWQOS,
        m_axi_D_BUS_AWREGION,
        m_axi_D_BUS_AWUSER,
        m_axi_D_BUS_WVALID,
        m_axi_D_BUS_WREADY,
        m_axi_D_BUS_WDATA,
        m_axi_D_BUS_WSTRB,
        m_axi_D_BUS_WLAST,
        m_axi_D_BUS_WID,
        m_axi_D_BUS_WUSER,
        m_axi_D_BUS_ARVALID,
        m_axi_D_BUS_ARREADY,
        m_axi_D_BUS_ARADDR,
        m_axi_D_BUS_ARID,
        m_axi_D_BUS_ARLEN,
        m_axi_D_BUS_ARSIZE,
        m_axi_D_BUS_ARBURST,
        m_axi_D_BUS_ARLOCK,
        m_axi_D_BUS_ARCACHE,
        m_axi_D_BUS_ARPROT,
        m_axi_D_BUS_ARQOS,
        m_axi_D_BUS_ARREGION,
        m_axi_D_BUS_ARUSER,
        m_axi_D_BUS_RVALID,
        m_axi_D_BUS_RREADY,
        m_axi_D_BUS_RDATA,
        m_axi_D_BUS_RLAST,
        m_axi_D_BUS_RID,
        m_axi_D_BUS_RUSER,
        m_axi_D_BUS_RRESP,
        m_axi_D_BUS_BVALID,
        m_axi_D_BUS_BREADY,
        m_axi_D_BUS_BRESP,
        m_axi_D_BUS_BID,
        m_axi_D_BUS_BUSER
);

parameter    C_S_AXI_D_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_D_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_D_BUS_ID_WIDTH = 1;
parameter    C_M_AXI_D_BUS_ADDR_WIDTH = 32;
parameter    C_M_AXI_D_BUS_DATA_WIDTH = 32;
parameter    C_M_AXI_D_BUS_AWUSER_WIDTH = 1;
parameter    C_M_AXI_D_BUS_ARUSER_WIDTH = 1;
parameter    C_M_AXI_D_BUS_WUSER_WIDTH = 1;
parameter    C_M_AXI_D_BUS_RUSER_WIDTH = 1;
parameter    C_M_AXI_D_BUS_BUSER_WIDTH = 1;
parameter    C_M_AXI_D_BUS_USER_VALUE = 0;
parameter    C_M_AXI_D_BUS_PROT_VALUE = 0;
parameter    C_M_AXI_D_BUS_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;

parameter C_S_AXI_D_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_D_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_D_BUS_AWVALID;
output   s_axi_D_BUS_AWREADY;
input  [C_S_AXI_D_BUS_ADDR_WIDTH - 1:0] s_axi_D_BUS_AWADDR;
input   s_axi_D_BUS_WVALID;
output   s_axi_D_BUS_WREADY;
input  [C_S_AXI_D_BUS_DATA_WIDTH - 1:0] s_axi_D_BUS_WDATA;
input  [C_S_AXI_D_BUS_WSTRB_WIDTH - 1:0] s_axi_D_BUS_WSTRB;
input   s_axi_D_BUS_ARVALID;
output   s_axi_D_BUS_ARREADY;
input  [C_S_AXI_D_BUS_ADDR_WIDTH - 1:0] s_axi_D_BUS_ARADDR;
output   s_axi_D_BUS_RVALID;
input   s_axi_D_BUS_RREADY;
output  [C_S_AXI_D_BUS_DATA_WIDTH - 1:0] s_axi_D_BUS_RDATA;
output  [1:0] s_axi_D_BUS_RRESP;
output   s_axi_D_BUS_BVALID;
input   s_axi_D_BUS_BREADY;
output  [1:0] s_axi_D_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_D_BUS_AWVALID;
input   m_axi_D_BUS_AWREADY;
output  [C_M_AXI_D_BUS_ADDR_WIDTH - 1:0] m_axi_D_BUS_AWADDR;
output  [C_M_AXI_D_BUS_ID_WIDTH - 1:0] m_axi_D_BUS_AWID;
output  [7:0] m_axi_D_BUS_AWLEN;
output  [2:0] m_axi_D_BUS_AWSIZE;
output  [1:0] m_axi_D_BUS_AWBURST;
output  [1:0] m_axi_D_BUS_AWLOCK;
output  [3:0] m_axi_D_BUS_AWCACHE;
output  [2:0] m_axi_D_BUS_AWPROT;
output  [3:0] m_axi_D_BUS_AWQOS;
output  [3:0] m_axi_D_BUS_AWREGION;
output  [C_M_AXI_D_BUS_AWUSER_WIDTH - 1:0] m_axi_D_BUS_AWUSER;
output   m_axi_D_BUS_WVALID;
input   m_axi_D_BUS_WREADY;
output  [C_M_AXI_D_BUS_DATA_WIDTH - 1:0] m_axi_D_BUS_WDATA;
output  [C_M_AXI_D_BUS_WSTRB_WIDTH - 1:0] m_axi_D_BUS_WSTRB;
output   m_axi_D_BUS_WLAST;
output  [C_M_AXI_D_BUS_ID_WIDTH - 1:0] m_axi_D_BUS_WID;
output  [C_M_AXI_D_BUS_WUSER_WIDTH - 1:0] m_axi_D_BUS_WUSER;
output   m_axi_D_BUS_ARVALID;
input   m_axi_D_BUS_ARREADY;
output  [C_M_AXI_D_BUS_ADDR_WIDTH - 1:0] m_axi_D_BUS_ARADDR;
output  [C_M_AXI_D_BUS_ID_WIDTH - 1:0] m_axi_D_BUS_ARID;
output  [7:0] m_axi_D_BUS_ARLEN;
output  [2:0] m_axi_D_BUS_ARSIZE;
output  [1:0] m_axi_D_BUS_ARBURST;
output  [1:0] m_axi_D_BUS_ARLOCK;
output  [3:0] m_axi_D_BUS_ARCACHE;
output  [2:0] m_axi_D_BUS_ARPROT;
output  [3:0] m_axi_D_BUS_ARQOS;
output  [3:0] m_axi_D_BUS_ARREGION;
output  [C_M_AXI_D_BUS_ARUSER_WIDTH - 1:0] m_axi_D_BUS_ARUSER;
input   m_axi_D_BUS_RVALID;
output   m_axi_D_BUS_RREADY;
input  [C_M_AXI_D_BUS_DATA_WIDTH - 1:0] m_axi_D_BUS_RDATA;
input   m_axi_D_BUS_RLAST;
input  [C_M_AXI_D_BUS_ID_WIDTH - 1:0] m_axi_D_BUS_RID;
input  [C_M_AXI_D_BUS_RUSER_WIDTH - 1:0] m_axi_D_BUS_RUSER;
input  [1:0] m_axi_D_BUS_RRESP;
input   m_axi_D_BUS_BVALID;
output   m_axi_D_BUS_BREADY;
input  [1:0] m_axi_D_BUS_BRESP;
input  [C_M_AXI_D_BUS_ID_WIDTH - 1:0] m_axi_D_BUS_BID;
input  [C_M_AXI_D_BUS_BUSER_WIDTH - 1:0] m_axi_D_BUS_BUSER;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] img_in;
wire   [31:0] img_out;
wire    D_BUS_AWREADY;
wire    D_BUS_WREADY;
wire    D_BUS_ARREADY;
wire    D_BUS_RVALID;
wire   [7:0] D_BUS_RDATA;
wire    D_BUS_RLAST;
wire   [0:0] D_BUS_RID;
wire   [0:0] D_BUS_RUSER;
wire   [1:0] D_BUS_RRESP;
wire    D_BUS_BVALID;
wire   [1:0] D_BUS_BRESP;
wire   [0:0] D_BUS_BID;
wire   [0:0] D_BUS_BUSER;
wire    Loop_1_proc_U0_ap_start;
wire    Loop_1_proc_U0_ap_done;
wire    Loop_1_proc_U0_ap_continue;
wire    Loop_1_proc_U0_ap_idle;
wire    Loop_1_proc_U0_ap_ready;
wire    Loop_1_proc_U0_m_axi_img_in_AWVALID;
wire   [31:0] Loop_1_proc_U0_m_axi_img_in_AWADDR;
wire   [0:0] Loop_1_proc_U0_m_axi_img_in_AWID;
wire   [31:0] Loop_1_proc_U0_m_axi_img_in_AWLEN;
wire   [2:0] Loop_1_proc_U0_m_axi_img_in_AWSIZE;
wire   [1:0] Loop_1_proc_U0_m_axi_img_in_AWBURST;
wire   [1:0] Loop_1_proc_U0_m_axi_img_in_AWLOCK;
wire   [3:0] Loop_1_proc_U0_m_axi_img_in_AWCACHE;
wire   [2:0] Loop_1_proc_U0_m_axi_img_in_AWPROT;
wire   [3:0] Loop_1_proc_U0_m_axi_img_in_AWQOS;
wire   [3:0] Loop_1_proc_U0_m_axi_img_in_AWREGION;
wire   [0:0] Loop_1_proc_U0_m_axi_img_in_AWUSER;
wire    Loop_1_proc_U0_m_axi_img_in_WVALID;
wire   [7:0] Loop_1_proc_U0_m_axi_img_in_WDATA;
wire   [0:0] Loop_1_proc_U0_m_axi_img_in_WSTRB;
wire    Loop_1_proc_U0_m_axi_img_in_WLAST;
wire   [0:0] Loop_1_proc_U0_m_axi_img_in_WID;
wire   [0:0] Loop_1_proc_U0_m_axi_img_in_WUSER;
wire    Loop_1_proc_U0_m_axi_img_in_ARVALID;
wire   [31:0] Loop_1_proc_U0_m_axi_img_in_ARADDR;
wire   [0:0] Loop_1_proc_U0_m_axi_img_in_ARID;
wire   [31:0] Loop_1_proc_U0_m_axi_img_in_ARLEN;
wire   [2:0] Loop_1_proc_U0_m_axi_img_in_ARSIZE;
wire   [1:0] Loop_1_proc_U0_m_axi_img_in_ARBURST;
wire   [1:0] Loop_1_proc_U0_m_axi_img_in_ARLOCK;
wire   [3:0] Loop_1_proc_U0_m_axi_img_in_ARCACHE;
wire   [2:0] Loop_1_proc_U0_m_axi_img_in_ARPROT;
wire   [3:0] Loop_1_proc_U0_m_axi_img_in_ARQOS;
wire   [3:0] Loop_1_proc_U0_m_axi_img_in_ARREGION;
wire   [0:0] Loop_1_proc_U0_m_axi_img_in_ARUSER;
wire    Loop_1_proc_U0_m_axi_img_in_RREADY;
wire    Loop_1_proc_U0_m_axi_img_in_BREADY;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Loop_1_proc_U0_start_full_n;
wire    Loop_1_proc_U0_start_write;

inverse_img_D_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_D_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_D_BUS_DATA_WIDTH ))
inverse_img_D_BUS_s_axi_U(
    .AWVALID(s_axi_D_BUS_AWVALID),
    .AWREADY(s_axi_D_BUS_AWREADY),
    .AWADDR(s_axi_D_BUS_AWADDR),
    .WVALID(s_axi_D_BUS_WVALID),
    .WREADY(s_axi_D_BUS_WREADY),
    .WDATA(s_axi_D_BUS_WDATA),
    .WSTRB(s_axi_D_BUS_WSTRB),
    .ARVALID(s_axi_D_BUS_ARVALID),
    .ARREADY(s_axi_D_BUS_ARREADY),
    .ARADDR(s_axi_D_BUS_ARADDR),
    .RVALID(s_axi_D_BUS_RVALID),
    .RREADY(s_axi_D_BUS_RREADY),
    .RDATA(s_axi_D_BUS_RDATA),
    .RRESP(s_axi_D_BUS_RRESP),
    .BVALID(s_axi_D_BUS_BVALID),
    .BREADY(s_axi_D_BUS_BREADY),
    .BRESP(s_axi_D_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .img_in(img_in),
    .img_out(img_out)
);

inverse_img_D_BUS_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_D_BUS_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_D_BUS_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_D_BUS_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_D_BUS_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_D_BUS_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_D_BUS_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_D_BUS_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_D_BUS_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_D_BUS_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_D_BUS_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_D_BUS_CACHE_VALUE ))
inverse_img_D_BUS_m_axi_U(
    .AWVALID(m_axi_D_BUS_AWVALID),
    .AWREADY(m_axi_D_BUS_AWREADY),
    .AWADDR(m_axi_D_BUS_AWADDR),
    .AWID(m_axi_D_BUS_AWID),
    .AWLEN(m_axi_D_BUS_AWLEN),
    .AWSIZE(m_axi_D_BUS_AWSIZE),
    .AWBURST(m_axi_D_BUS_AWBURST),
    .AWLOCK(m_axi_D_BUS_AWLOCK),
    .AWCACHE(m_axi_D_BUS_AWCACHE),
    .AWPROT(m_axi_D_BUS_AWPROT),
    .AWQOS(m_axi_D_BUS_AWQOS),
    .AWREGION(m_axi_D_BUS_AWREGION),
    .AWUSER(m_axi_D_BUS_AWUSER),
    .WVALID(m_axi_D_BUS_WVALID),
    .WREADY(m_axi_D_BUS_WREADY),
    .WDATA(m_axi_D_BUS_WDATA),
    .WSTRB(m_axi_D_BUS_WSTRB),
    .WLAST(m_axi_D_BUS_WLAST),
    .WID(m_axi_D_BUS_WID),
    .WUSER(m_axi_D_BUS_WUSER),
    .ARVALID(m_axi_D_BUS_ARVALID),
    .ARREADY(m_axi_D_BUS_ARREADY),
    .ARADDR(m_axi_D_BUS_ARADDR),
    .ARID(m_axi_D_BUS_ARID),
    .ARLEN(m_axi_D_BUS_ARLEN),
    .ARSIZE(m_axi_D_BUS_ARSIZE),
    .ARBURST(m_axi_D_BUS_ARBURST),
    .ARLOCK(m_axi_D_BUS_ARLOCK),
    .ARCACHE(m_axi_D_BUS_ARCACHE),
    .ARPROT(m_axi_D_BUS_ARPROT),
    .ARQOS(m_axi_D_BUS_ARQOS),
    .ARREGION(m_axi_D_BUS_ARREGION),
    .ARUSER(m_axi_D_BUS_ARUSER),
    .RVALID(m_axi_D_BUS_RVALID),
    .RREADY(m_axi_D_BUS_RREADY),
    .RDATA(m_axi_D_BUS_RDATA),
    .RLAST(m_axi_D_BUS_RLAST),
    .RID(m_axi_D_BUS_RID),
    .RUSER(m_axi_D_BUS_RUSER),
    .RRESP(m_axi_D_BUS_RRESP),
    .BVALID(m_axi_D_BUS_BVALID),
    .BREADY(m_axi_D_BUS_BREADY),
    .BRESP(m_axi_D_BUS_BRESP),
    .BID(m_axi_D_BUS_BID),
    .BUSER(m_axi_D_BUS_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Loop_1_proc_U0_m_axi_img_in_ARVALID),
    .I_ARREADY(D_BUS_ARREADY),
    .I_ARADDR(Loop_1_proc_U0_m_axi_img_in_ARADDR),
    .I_ARID(Loop_1_proc_U0_m_axi_img_in_ARID),
    .I_ARLEN(Loop_1_proc_U0_m_axi_img_in_ARLEN),
    .I_ARSIZE(Loop_1_proc_U0_m_axi_img_in_ARSIZE),
    .I_ARLOCK(Loop_1_proc_U0_m_axi_img_in_ARLOCK),
    .I_ARCACHE(Loop_1_proc_U0_m_axi_img_in_ARCACHE),
    .I_ARQOS(Loop_1_proc_U0_m_axi_img_in_ARQOS),
    .I_ARPROT(Loop_1_proc_U0_m_axi_img_in_ARPROT),
    .I_ARUSER(Loop_1_proc_U0_m_axi_img_in_ARUSER),
    .I_ARBURST(Loop_1_proc_U0_m_axi_img_in_ARBURST),
    .I_ARREGION(Loop_1_proc_U0_m_axi_img_in_ARREGION),
    .I_RVALID(D_BUS_RVALID),
    .I_RREADY(Loop_1_proc_U0_m_axi_img_in_RREADY),
    .I_RDATA(D_BUS_RDATA),
    .I_RID(D_BUS_RID),
    .I_RUSER(D_BUS_RUSER),
    .I_RRESP(D_BUS_RRESP),
    .I_RLAST(D_BUS_RLAST),
    .I_AWVALID(Loop_1_proc_U0_m_axi_img_in_AWVALID),
    .I_AWREADY(D_BUS_AWREADY),
    .I_AWADDR(Loop_1_proc_U0_m_axi_img_in_AWADDR),
    .I_AWID(Loop_1_proc_U0_m_axi_img_in_AWID),
    .I_AWLEN(Loop_1_proc_U0_m_axi_img_in_AWLEN),
    .I_AWSIZE(Loop_1_proc_U0_m_axi_img_in_AWSIZE),
    .I_AWLOCK(Loop_1_proc_U0_m_axi_img_in_AWLOCK),
    .I_AWCACHE(Loop_1_proc_U0_m_axi_img_in_AWCACHE),
    .I_AWQOS(Loop_1_proc_U0_m_axi_img_in_AWQOS),
    .I_AWPROT(Loop_1_proc_U0_m_axi_img_in_AWPROT),
    .I_AWUSER(Loop_1_proc_U0_m_axi_img_in_AWUSER),
    .I_AWBURST(Loop_1_proc_U0_m_axi_img_in_AWBURST),
    .I_AWREGION(Loop_1_proc_U0_m_axi_img_in_AWREGION),
    .I_WVALID(Loop_1_proc_U0_m_axi_img_in_WVALID),
    .I_WREADY(D_BUS_WREADY),
    .I_WDATA(Loop_1_proc_U0_m_axi_img_in_WDATA),
    .I_WID(Loop_1_proc_U0_m_axi_img_in_WID),
    .I_WUSER(Loop_1_proc_U0_m_axi_img_in_WUSER),
    .I_WLAST(Loop_1_proc_U0_m_axi_img_in_WLAST),
    .I_WSTRB(Loop_1_proc_U0_m_axi_img_in_WSTRB),
    .I_BVALID(D_BUS_BVALID),
    .I_BREADY(Loop_1_proc_U0_m_axi_img_in_BREADY),
    .I_BRESP(D_BUS_BRESP),
    .I_BID(D_BUS_BID),
    .I_BUSER(D_BUS_BUSER)
);

Loop_1_proc Loop_1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_1_proc_U0_ap_start),
    .ap_done(Loop_1_proc_U0_ap_done),
    .ap_continue(Loop_1_proc_U0_ap_continue),
    .ap_idle(Loop_1_proc_U0_ap_idle),
    .ap_ready(Loop_1_proc_U0_ap_ready),
    .m_axi_img_in_AWVALID(Loop_1_proc_U0_m_axi_img_in_AWVALID),
    .m_axi_img_in_AWREADY(D_BUS_AWREADY),
    .m_axi_img_in_AWADDR(Loop_1_proc_U0_m_axi_img_in_AWADDR),
    .m_axi_img_in_AWID(Loop_1_proc_U0_m_axi_img_in_AWID),
    .m_axi_img_in_AWLEN(Loop_1_proc_U0_m_axi_img_in_AWLEN),
    .m_axi_img_in_AWSIZE(Loop_1_proc_U0_m_axi_img_in_AWSIZE),
    .m_axi_img_in_AWBURST(Loop_1_proc_U0_m_axi_img_in_AWBURST),
    .m_axi_img_in_AWLOCK(Loop_1_proc_U0_m_axi_img_in_AWLOCK),
    .m_axi_img_in_AWCACHE(Loop_1_proc_U0_m_axi_img_in_AWCACHE),
    .m_axi_img_in_AWPROT(Loop_1_proc_U0_m_axi_img_in_AWPROT),
    .m_axi_img_in_AWQOS(Loop_1_proc_U0_m_axi_img_in_AWQOS),
    .m_axi_img_in_AWREGION(Loop_1_proc_U0_m_axi_img_in_AWREGION),
    .m_axi_img_in_AWUSER(Loop_1_proc_U0_m_axi_img_in_AWUSER),
    .m_axi_img_in_WVALID(Loop_1_proc_U0_m_axi_img_in_WVALID),
    .m_axi_img_in_WREADY(D_BUS_WREADY),
    .m_axi_img_in_WDATA(Loop_1_proc_U0_m_axi_img_in_WDATA),
    .m_axi_img_in_WSTRB(Loop_1_proc_U0_m_axi_img_in_WSTRB),
    .m_axi_img_in_WLAST(Loop_1_proc_U0_m_axi_img_in_WLAST),
    .m_axi_img_in_WID(Loop_1_proc_U0_m_axi_img_in_WID),
    .m_axi_img_in_WUSER(Loop_1_proc_U0_m_axi_img_in_WUSER),
    .m_axi_img_in_ARVALID(Loop_1_proc_U0_m_axi_img_in_ARVALID),
    .m_axi_img_in_ARREADY(D_BUS_ARREADY),
    .m_axi_img_in_ARADDR(Loop_1_proc_U0_m_axi_img_in_ARADDR),
    .m_axi_img_in_ARID(Loop_1_proc_U0_m_axi_img_in_ARID),
    .m_axi_img_in_ARLEN(Loop_1_proc_U0_m_axi_img_in_ARLEN),
    .m_axi_img_in_ARSIZE(Loop_1_proc_U0_m_axi_img_in_ARSIZE),
    .m_axi_img_in_ARBURST(Loop_1_proc_U0_m_axi_img_in_ARBURST),
    .m_axi_img_in_ARLOCK(Loop_1_proc_U0_m_axi_img_in_ARLOCK),
    .m_axi_img_in_ARCACHE(Loop_1_proc_U0_m_axi_img_in_ARCACHE),
    .m_axi_img_in_ARPROT(Loop_1_proc_U0_m_axi_img_in_ARPROT),
    .m_axi_img_in_ARQOS(Loop_1_proc_U0_m_axi_img_in_ARQOS),
    .m_axi_img_in_ARREGION(Loop_1_proc_U0_m_axi_img_in_ARREGION),
    .m_axi_img_in_ARUSER(Loop_1_proc_U0_m_axi_img_in_ARUSER),
    .m_axi_img_in_RVALID(D_BUS_RVALID),
    .m_axi_img_in_RREADY(Loop_1_proc_U0_m_axi_img_in_RREADY),
    .m_axi_img_in_RDATA(D_BUS_RDATA),
    .m_axi_img_in_RLAST(D_BUS_RLAST),
    .m_axi_img_in_RID(D_BUS_RID),
    .m_axi_img_in_RUSER(D_BUS_RUSER),
    .m_axi_img_in_RRESP(D_BUS_RRESP),
    .m_axi_img_in_BVALID(D_BUS_BVALID),
    .m_axi_img_in_BREADY(Loop_1_proc_U0_m_axi_img_in_BREADY),
    .m_axi_img_in_BRESP(D_BUS_BRESP),
    .m_axi_img_in_BID(D_BUS_BID),
    .m_axi_img_in_BUSER(D_BUS_BUSER),
    .img_in_offset(img_in),
    .img_out_offset(img_out)
);

assign Loop_1_proc_U0_ap_continue = 1'b1;

assign Loop_1_proc_U0_ap_start = ap_start;

assign Loop_1_proc_U0_start_full_n = 1'b1;

assign Loop_1_proc_U0_start_write = 1'b0;

assign ap_done = Loop_1_proc_U0_ap_done;

assign ap_idle = Loop_1_proc_U0_ap_idle;

assign ap_ready = Loop_1_proc_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Loop_1_proc_U0_ap_done;

assign ap_sync_ready = Loop_1_proc_U0_ap_ready;

endmodule //inverse_img
