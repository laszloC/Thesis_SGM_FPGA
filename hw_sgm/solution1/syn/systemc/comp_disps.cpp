// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "comp_disps.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic comp_disps::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic comp_disps::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> comp_disps::ap_ST_fsm_state1 = "1";
const sc_lv<16> comp_disps::ap_ST_fsm_state2 = "10";
const sc_lv<16> comp_disps::ap_ST_fsm_state3 = "100";
const sc_lv<16> comp_disps::ap_ST_fsm_state4 = "1000";
const sc_lv<16> comp_disps::ap_ST_fsm_state5 = "10000";
const sc_lv<16> comp_disps::ap_ST_fsm_state6 = "100000";
const sc_lv<16> comp_disps::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> comp_disps::ap_ST_fsm_state16 = "1000000000000000";
const bool comp_disps::ap_const_boolean_1 = true;
const sc_lv<32> comp_disps::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> comp_disps::ap_const_lv1_0 = "0";
const sc_lv<3> comp_disps::ap_const_lv3_0 = "000";
const sc_lv<2> comp_disps::ap_const_lv2_0 = "00";
const sc_lv<4> comp_disps::ap_const_lv4_0 = "0000";
const sc_lv<32> comp_disps::ap_const_lv32_3 = "11";
const sc_lv<32> comp_disps::ap_const_lv32_A = "1010";
const sc_lv<32> comp_disps::ap_const_lv32_1 = "1";
const sc_lv<1> comp_disps::ap_const_lv1_1 = "1";
const sc_lv<32> comp_disps::ap_const_lv32_F = "1111";
const bool comp_disps::ap_const_boolean_0 = false;
const sc_lv<32> comp_disps::ap_const_lv32_2 = "10";
const sc_lv<32> comp_disps::ap_const_lv32_B = "1011";
const sc_lv<8> comp_disps::ap_const_lv8_0 = "00000000";
const sc_lv<16> comp_disps::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> comp_disps::ap_const_lv32_1F = "11111";
const sc_lv<32> comp_disps::ap_const_lv32_9 = "1001";
const sc_lv<32> comp_disps::ap_const_lv32_FF = "11111111";
const sc_lv<5> comp_disps::ap_const_lv5_0 = "00000";
const sc_lv<32> comp_disps::ap_const_lv32_E1 = "11100001";
const sc_lv<32> comp_disps::ap_const_lv32_1E = "11110";
const sc_lv<16> comp_disps::ap_const_lv16_E1 = "11100001";
const sc_lv<8> comp_disps::ap_const_lv8_BC = "10111100";
const sc_lv<8> comp_disps::ap_const_lv8_1 = "1";
const sc_lv<8> comp_disps::ap_const_lv8_E1 = "11100001";
const sc_lv<5> comp_disps::ap_const_lv5_1E = "11110";
const sc_lv<5> comp_disps::ap_const_lv5_1 = "1";

comp_disps::comp_disps(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state11);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( exitcond_fu_272_p2 );

    SC_METHOD(thread_ap_block_state11_io);
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( ap_sig_ioackin_m_axi_disp_out_m_img_WREADY );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY );

    SC_METHOD(thread_ap_condition_220);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( ap_block_state11_io );

    SC_METHOD(thread_ap_condition_432);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( m_axi_disp_out_m_img_WREADY );
    sensitive << ( exitcond_fu_272_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY);
    sensitive << ( m_axi_cost_in_m_img_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY);
    sensitive << ( m_axi_disp_out_m_img_AWREADY );
    sensitive << ( ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_disp_out_m_img_WREADY);
    sensitive << ( m_axi_disp_out_m_img_WREADY );
    sensitive << ( ap_reg_ioackin_m_axi_disp_out_m_img_WREADY );

    SC_METHOD(thread_cost_in_m_img_blk_n_AR);
    sensitive << ( m_axi_cost_in_m_img_ARREADY );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cost_in_m_img_blk_n_R);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_272_p2 );

    SC_METHOD(thread_d_fu_278_p2);
    sensitive << ( min_d_reg_162 );

    SC_METHOD(thread_disp_out_m_img_blk_n_AW);
    sensitive << ( m_axi_disp_out_m_img_AWREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_179_p2 );

    SC_METHOD(thread_disp_out_m_img_blk_n_B);
    sensitive << ( m_axi_disp_out_m_img_BVALID );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_disp_out_m_img_blk_n_W);
    sensitive << ( m_axi_disp_out_m_img_WREADY );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_272_p2 );

    SC_METHOD(thread_exitcond2_fu_206_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_assign_2_reg_127 );

    SC_METHOD(thread_exitcond3_fu_179_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( i_assign_1_reg_104 );

    SC_METHOD(thread_exitcond_fu_272_p2);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( ap_block_state11_io );
    sensitive << ( min_d_reg_162 );

    SC_METHOD(thread_i_fu_185_p2);
    sensitive << ( i_assign_1_reg_104 );

    SC_METHOD(thread_j_assign_2_cast5_fu_202_p1);
    sensitive << ( j_assign_2_reg_127 );

    SC_METHOD(thread_j_assign_min_d1_fu_294_p3);
    sensitive << ( min_d_cast1_reg_346 );
    sensitive << ( min_d1_reg_138 );
    sensitive << ( tmp_5_fu_289_p2 );

    SC_METHOD(thread_j_fu_212_p2);
    sensitive << ( j_assign_2_reg_127 );

    SC_METHOD(thread_m_axi_cost_in_m_img_ARADDR);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_257_p1 );
    sensitive << ( ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY );

    SC_METHOD(thread_m_axi_cost_in_m_img_ARBURST);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARCACHE);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARID);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARLEN);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY );

    SC_METHOD(thread_m_axi_cost_in_m_img_ARLOCK);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARPROT);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARQOS);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARREGION);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARSIZE);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARUSER);

    SC_METHOD(thread_m_axi_cost_in_m_img_ARVALID);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY );

    SC_METHOD(thread_m_axi_cost_in_m_img_AWADDR);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWBURST);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWCACHE);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWID);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWLEN);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWLOCK);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWPROT);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWQOS);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWREGION);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWSIZE);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWUSER);

    SC_METHOD(thread_m_axi_cost_in_m_img_AWVALID);

    SC_METHOD(thread_m_axi_cost_in_m_img_BREADY);

    SC_METHOD(thread_m_axi_cost_in_m_img_RREADY);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( ap_block_state11_io );

    SC_METHOD(thread_m_axi_cost_in_m_img_WDATA);

    SC_METHOD(thread_m_axi_cost_in_m_img_WID);

    SC_METHOD(thread_m_axi_cost_in_m_img_WLAST);

    SC_METHOD(thread_m_axi_cost_in_m_img_WSTRB);

    SC_METHOD(thread_m_axi_cost_in_m_img_WUSER);

    SC_METHOD(thread_m_axi_cost_in_m_img_WVALID);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARADDR);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARBURST);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARCACHE);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARID);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARLEN);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARLOCK);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARPROT);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARQOS);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARREGION);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARSIZE);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARUSER);

    SC_METHOD(thread_m_axi_disp_out_m_img_ARVALID);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( tmp_fu_191_p1 );
    sensitive << ( ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY );

    SC_METHOD(thread_m_axi_disp_out_m_img_AWBURST);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWCACHE);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWID);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWLEN);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY );

    SC_METHOD(thread_m_axi_disp_out_m_img_AWLOCK);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWPROT);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWQOS);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWREGION);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWSIZE);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWUSER);

    SC_METHOD(thread_m_axi_disp_out_m_img_AWVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY );

    SC_METHOD(thread_m_axi_disp_out_m_img_BREADY);
    sensitive << ( m_axi_disp_out_m_img_BVALID );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_m_axi_disp_out_m_img_RREADY);

    SC_METHOD(thread_m_axi_disp_out_m_img_WDATA);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( min_d1_reg_138 );
    sensitive << ( ap_reg_ioackin_m_axi_disp_out_m_img_WREADY );

    SC_METHOD(thread_m_axi_disp_out_m_img_WID);

    SC_METHOD(thread_m_axi_disp_out_m_img_WLAST);

    SC_METHOD(thread_m_axi_disp_out_m_img_WSTRB);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( ap_reg_ioackin_m_axi_disp_out_m_img_WREADY );

    SC_METHOD(thread_m_axi_disp_out_m_img_WUSER);

    SC_METHOD(thread_m_axi_disp_out_m_img_WVALID);
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( ap_reg_ioackin_m_axi_disp_out_m_img_WREADY );

    SC_METHOD(thread_min_c_2_min_c_fu_301_p3);
    sensitive << ( min_c_1_reg_359 );
    sensitive << ( min_c_reg_150 );
    sensitive << ( tmp_5_fu_289_p2 );

    SC_METHOD(thread_min_d_cast1_fu_268_p1);
    sensitive << ( min_d_reg_162 );

    SC_METHOD(thread_next_mul_fu_173_p2);
    sensitive << ( phi_mul_reg_115 );

    SC_METHOD(thread_p_fu_218_p2);
    sensitive << ( phi_mul_reg_115 );
    sensitive << ( j_assign_2_cast5_fu_202_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_244_p1);
    sensitive << ( p_shl1_fu_236_p3 );

    SC_METHOD(thread_p_shl1_fu_236_p3);
    sensitive << ( p_fu_218_p2 );

    SC_METHOD(thread_p_shl_cast_fu_232_p1);
    sensitive << ( p_shl_fu_224_p3 );

    SC_METHOD(thread_p_shl_fu_224_p3);
    sensitive << ( p_fu_218_p2 );

    SC_METHOD(thread_tmp_1_fu_254_p1);
    sensitive << ( tmp_9_reg_335 );

    SC_METHOD(thread_tmp_2_fu_257_p1);
    sensitive << ( tmp_1_fu_254_p1 );

    SC_METHOD(thread_tmp_5_fu_289_p2);
    sensitive << ( min_c_1_reg_359 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( min_c_reg_150 );

    SC_METHOD(thread_tmp_9_fu_248_p2);
    sensitive << ( p_shl_cast_fu_232_p1 );
    sensitive << ( p_shl1_cast_fu_244_p1 );

    SC_METHOD(thread_tmp_fu_191_p1);
    sensitive << ( phi_mul_reg_115 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_cost_in_m_img_RVALID );
    sensitive << ( m_axi_disp_out_m_img_BVALID );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_206_p2 );
    sensitive << ( ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY );
    sensitive << ( ap_block_state11_io );

    ap_CS_fsm = "0000000000000001";
    ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_disp_out_m_img_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "comp_disps_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWVALID, "(port)m_axi_cost_in_m_img_AWVALID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWREADY, "(port)m_axi_cost_in_m_img_AWREADY");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWADDR, "(port)m_axi_cost_in_m_img_AWADDR");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWID, "(port)m_axi_cost_in_m_img_AWID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWLEN, "(port)m_axi_cost_in_m_img_AWLEN");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWSIZE, "(port)m_axi_cost_in_m_img_AWSIZE");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWBURST, "(port)m_axi_cost_in_m_img_AWBURST");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWLOCK, "(port)m_axi_cost_in_m_img_AWLOCK");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWCACHE, "(port)m_axi_cost_in_m_img_AWCACHE");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWPROT, "(port)m_axi_cost_in_m_img_AWPROT");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWQOS, "(port)m_axi_cost_in_m_img_AWQOS");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWREGION, "(port)m_axi_cost_in_m_img_AWREGION");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_AWUSER, "(port)m_axi_cost_in_m_img_AWUSER");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_WVALID, "(port)m_axi_cost_in_m_img_WVALID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_WREADY, "(port)m_axi_cost_in_m_img_WREADY");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_WDATA, "(port)m_axi_cost_in_m_img_WDATA");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_WSTRB, "(port)m_axi_cost_in_m_img_WSTRB");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_WLAST, "(port)m_axi_cost_in_m_img_WLAST");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_WID, "(port)m_axi_cost_in_m_img_WID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_WUSER, "(port)m_axi_cost_in_m_img_WUSER");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARVALID, "(port)m_axi_cost_in_m_img_ARVALID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARREADY, "(port)m_axi_cost_in_m_img_ARREADY");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARADDR, "(port)m_axi_cost_in_m_img_ARADDR");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARID, "(port)m_axi_cost_in_m_img_ARID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARLEN, "(port)m_axi_cost_in_m_img_ARLEN");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARSIZE, "(port)m_axi_cost_in_m_img_ARSIZE");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARBURST, "(port)m_axi_cost_in_m_img_ARBURST");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARLOCK, "(port)m_axi_cost_in_m_img_ARLOCK");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARCACHE, "(port)m_axi_cost_in_m_img_ARCACHE");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARPROT, "(port)m_axi_cost_in_m_img_ARPROT");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARQOS, "(port)m_axi_cost_in_m_img_ARQOS");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARREGION, "(port)m_axi_cost_in_m_img_ARREGION");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_ARUSER, "(port)m_axi_cost_in_m_img_ARUSER");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_RVALID, "(port)m_axi_cost_in_m_img_RVALID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_RREADY, "(port)m_axi_cost_in_m_img_RREADY");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_RDATA, "(port)m_axi_cost_in_m_img_RDATA");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_RLAST, "(port)m_axi_cost_in_m_img_RLAST");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_RID, "(port)m_axi_cost_in_m_img_RID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_RUSER, "(port)m_axi_cost_in_m_img_RUSER");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_RRESP, "(port)m_axi_cost_in_m_img_RRESP");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_BVALID, "(port)m_axi_cost_in_m_img_BVALID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_BREADY, "(port)m_axi_cost_in_m_img_BREADY");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_BRESP, "(port)m_axi_cost_in_m_img_BRESP");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_BID, "(port)m_axi_cost_in_m_img_BID");
    sc_trace(mVcdFile, m_axi_cost_in_m_img_BUSER, "(port)m_axi_cost_in_m_img_BUSER");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWVALID, "(port)m_axi_disp_out_m_img_AWVALID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWREADY, "(port)m_axi_disp_out_m_img_AWREADY");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWADDR, "(port)m_axi_disp_out_m_img_AWADDR");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWID, "(port)m_axi_disp_out_m_img_AWID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWLEN, "(port)m_axi_disp_out_m_img_AWLEN");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWSIZE, "(port)m_axi_disp_out_m_img_AWSIZE");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWBURST, "(port)m_axi_disp_out_m_img_AWBURST");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWLOCK, "(port)m_axi_disp_out_m_img_AWLOCK");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWCACHE, "(port)m_axi_disp_out_m_img_AWCACHE");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWPROT, "(port)m_axi_disp_out_m_img_AWPROT");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWQOS, "(port)m_axi_disp_out_m_img_AWQOS");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWREGION, "(port)m_axi_disp_out_m_img_AWREGION");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_AWUSER, "(port)m_axi_disp_out_m_img_AWUSER");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_WVALID, "(port)m_axi_disp_out_m_img_WVALID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_WREADY, "(port)m_axi_disp_out_m_img_WREADY");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_WDATA, "(port)m_axi_disp_out_m_img_WDATA");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_WSTRB, "(port)m_axi_disp_out_m_img_WSTRB");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_WLAST, "(port)m_axi_disp_out_m_img_WLAST");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_WID, "(port)m_axi_disp_out_m_img_WID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_WUSER, "(port)m_axi_disp_out_m_img_WUSER");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARVALID, "(port)m_axi_disp_out_m_img_ARVALID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARREADY, "(port)m_axi_disp_out_m_img_ARREADY");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARADDR, "(port)m_axi_disp_out_m_img_ARADDR");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARID, "(port)m_axi_disp_out_m_img_ARID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARLEN, "(port)m_axi_disp_out_m_img_ARLEN");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARSIZE, "(port)m_axi_disp_out_m_img_ARSIZE");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARBURST, "(port)m_axi_disp_out_m_img_ARBURST");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARLOCK, "(port)m_axi_disp_out_m_img_ARLOCK");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARCACHE, "(port)m_axi_disp_out_m_img_ARCACHE");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARPROT, "(port)m_axi_disp_out_m_img_ARPROT");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARQOS, "(port)m_axi_disp_out_m_img_ARQOS");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARREGION, "(port)m_axi_disp_out_m_img_ARREGION");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_ARUSER, "(port)m_axi_disp_out_m_img_ARUSER");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_RVALID, "(port)m_axi_disp_out_m_img_RVALID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_RREADY, "(port)m_axi_disp_out_m_img_RREADY");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_RDATA, "(port)m_axi_disp_out_m_img_RDATA");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_RLAST, "(port)m_axi_disp_out_m_img_RLAST");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_RID, "(port)m_axi_disp_out_m_img_RID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_RUSER, "(port)m_axi_disp_out_m_img_RUSER");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_RRESP, "(port)m_axi_disp_out_m_img_RRESP");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_BVALID, "(port)m_axi_disp_out_m_img_BVALID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_BREADY, "(port)m_axi_disp_out_m_img_BREADY");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_BRESP, "(port)m_axi_disp_out_m_img_BRESP");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_BID, "(port)m_axi_disp_out_m_img_BID");
    sc_trace(mVcdFile, m_axi_disp_out_m_img_BUSER, "(port)m_axi_disp_out_m_img_BUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cost_in_m_img_blk_n_AR, "cost_in_m_img_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, cost_in_m_img_blk_n_R, "cost_in_m_img_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, exitcond_fu_272_p2, "exitcond_fu_272_p2");
    sc_trace(mVcdFile, disp_out_m_img_blk_n_AW, "disp_out_m_img_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond3_fu_179_p2, "exitcond3_fu_179_p2");
    sc_trace(mVcdFile, disp_out_m_img_blk_n_W, "disp_out_m_img_blk_n_W");
    sc_trace(mVcdFile, disp_out_m_img_blk_n_B, "disp_out_m_img_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, next_mul_fu_173_p2, "next_mul_fu_173_p2");
    sc_trace(mVcdFile, next_mul_reg_308, "next_mul_reg_308");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY, "ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, i_fu_185_p2, "i_fu_185_p2");
    sc_trace(mVcdFile, i_reg_316, "i_reg_316");
    sc_trace(mVcdFile, j_fu_212_p2, "j_fu_212_p2");
    sc_trace(mVcdFile, j_reg_330, "j_reg_330");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_9_fu_248_p2, "tmp_9_fu_248_p2");
    sc_trace(mVcdFile, tmp_9_reg_335, "tmp_9_reg_335");
    sc_trace(mVcdFile, exitcond2_fu_206_p2, "exitcond2_fu_206_p2");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY, "ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY");
    sc_trace(mVcdFile, min_d_cast1_fu_268_p1, "min_d_cast1_fu_268_p1");
    sc_trace(mVcdFile, min_d_cast1_reg_346, "min_d_cast1_reg_346");
    sc_trace(mVcdFile, ap_block_state11, "ap_block_state11");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_disp_out_m_img_WREADY, "ap_sig_ioackin_m_axi_disp_out_m_img_WREADY");
    sc_trace(mVcdFile, ap_block_state11_io, "ap_block_state11_io");
    sc_trace(mVcdFile, d_fu_278_p2, "d_fu_278_p2");
    sc_trace(mVcdFile, d_reg_354, "d_reg_354");
    sc_trace(mVcdFile, min_c_1_reg_359, "min_c_1_reg_359");
    sc_trace(mVcdFile, j_assign_min_d1_fu_294_p3, "j_assign_min_d1_fu_294_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, min_c_2_min_c_fu_301_p3, "min_c_2_min_c_fu_301_p3");
    sc_trace(mVcdFile, i_assign_1_reg_104, "i_assign_1_reg_104");
    sc_trace(mVcdFile, phi_mul_reg_115, "phi_mul_reg_115");
    sc_trace(mVcdFile, j_assign_2_reg_127, "j_assign_2_reg_127");
    sc_trace(mVcdFile, min_d1_reg_138, "min_d1_reg_138");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, min_c_reg_150, "min_c_reg_150");
    sc_trace(mVcdFile, min_d_reg_162, "min_d_reg_162");
    sc_trace(mVcdFile, tmp_fu_191_p1, "tmp_fu_191_p1");
    sc_trace(mVcdFile, tmp_2_fu_257_p1, "tmp_2_fu_257_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY, "ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY, "ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_disp_out_m_img_WREADY, "ap_reg_ioackin_m_axi_disp_out_m_img_WREADY");
    sc_trace(mVcdFile, j_assign_2_cast5_fu_202_p1, "j_assign_2_cast5_fu_202_p1");
    sc_trace(mVcdFile, p_fu_218_p2, "p_fu_218_p2");
    sc_trace(mVcdFile, p_shl_fu_224_p3, "p_shl_fu_224_p3");
    sc_trace(mVcdFile, p_shl1_fu_236_p3, "p_shl1_fu_236_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_232_p1, "p_shl_cast_fu_232_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_244_p1, "p_shl1_cast_fu_244_p1");
    sc_trace(mVcdFile, tmp_1_fu_254_p1, "tmp_1_fu_254_p1");
    sc_trace(mVcdFile, tmp_5_fu_289_p2, "tmp_5_fu_289_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_432, "ap_condition_432");
    sc_trace(mVcdFile, ap_condition_220, "ap_condition_220");
#endif

    }
}

comp_disps::~comp_disps() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void comp_disps::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_cost_in_m_img_ARREADY.read())) {
                ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_179_p2.read()))) {
            if (esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_disp_out_m_img_AWREADY.read())) {
                ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_disp_out_m_img_WREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1))) {
            if (esl_seteq<1,1,1>(ap_condition_220.read(), ap_const_boolean_1)) {
                ap_reg_ioackin_m_axi_disp_out_m_img_WREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_condition_432.read(), ap_const_boolean_1)) {
                ap_reg_ioackin_m_axi_disp_out_m_img_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(m_axi_disp_out_m_img_BVALID.read(), ap_const_logic_1))) {
        i_assign_1_reg_104 = i_reg_316.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_assign_1_reg_104 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_179_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        j_assign_2_reg_127 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1) && 
                !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read())))) {
        j_assign_2_reg_127 = j_reg_330.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        min_c_reg_150 = min_c_2_min_c_fu_301_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        min_c_reg_150 = ap_const_lv32_FF;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        min_d1_reg_138 = j_assign_min_d1_fu_294_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        min_d1_reg_138 = ap_const_lv32_1F;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        min_d_reg_162 = d_reg_354.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        min_d_reg_162 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(m_axi_disp_out_m_img_BVALID.read(), ap_const_logic_1))) {
        phi_mul_reg_115 = next_mul_reg_308.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_115 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read())))) {
        d_reg_354 = d_fu_278_p2.read();
        min_d_cast1_reg_346 = min_d_cast1_fu_268_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        i_reg_316 = i_fu_185_p2.read();
        next_mul_reg_308 = next_mul_fu_173_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_330 = j_fu_212_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read())))) {
        min_c_1_reg_359 = m_axi_cost_in_m_img_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_206_p2.read()))) {
        tmp_9_reg_335 = tmp_9_fu_248_p2.read();
    }
}

void comp_disps::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void comp_disps::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void comp_disps::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void comp_disps::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void comp_disps::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void comp_disps::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void comp_disps::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void comp_disps::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void comp_disps::thread_ap_block_state11() {
    ap_block_state11 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read()));
}

void comp_disps::thread_ap_block_state11_io() {
    ap_block_state11_io = (esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_disp_out_m_img_WREADY.read()));
}

void comp_disps::thread_ap_block_state2_io() {
    ap_block_state2_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY.read()));
}

void comp_disps::thread_ap_condition_220() {
    ap_condition_220 = !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read()));
}

void comp_disps::thread_ap_condition_432() {
    ap_condition_432 = (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_disp_out_m_img_WREADY.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())));
}

void comp_disps::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond3_fu_179_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void comp_disps::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void comp_disps::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond3_fu_179_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void comp_disps::thread_ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY.read())) {
        ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY = m_axi_cost_in_m_img_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY = ap_const_logic_1;
    }
}

void comp_disps::thread_ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY.read())) {
        ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY = m_axi_disp_out_m_img_AWREADY.read();
    } else {
        ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY = ap_const_logic_1;
    }
}

void comp_disps::thread_ap_sig_ioackin_m_axi_disp_out_m_img_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_disp_out_m_img_WREADY.read())) {
        ap_sig_ioackin_m_axi_disp_out_m_img_WREADY = m_axi_disp_out_m_img_WREADY.read();
    } else {
        ap_sig_ioackin_m_axi_disp_out_m_img_WREADY = ap_const_logic_1;
    }
}

void comp_disps::thread_cost_in_m_img_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cost_in_m_img_blk_n_AR = m_axi_cost_in_m_img_ARREADY.read();
    } else {
        cost_in_m_img_blk_n_AR = ap_const_logic_1;
    }
}

void comp_disps::thread_cost_in_m_img_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()))) {
        cost_in_m_img_blk_n_R = m_axi_cost_in_m_img_RVALID.read();
    } else {
        cost_in_m_img_blk_n_R = ap_const_logic_1;
    }
}

void comp_disps::thread_d_fu_278_p2() {
    d_fu_278_p2 = (!min_d_reg_162.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(min_d_reg_162.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void comp_disps::thread_disp_out_m_img_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_179_p2.read()))) {
        disp_out_m_img_blk_n_AW = m_axi_disp_out_m_img_AWREADY.read();
    } else {
        disp_out_m_img_blk_n_AW = ap_const_logic_1;
    }
}

void comp_disps::thread_disp_out_m_img_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        disp_out_m_img_blk_n_B = m_axi_disp_out_m_img_BVALID.read();
    } else {
        disp_out_m_img_blk_n_B = ap_const_logic_1;
    }
}

void comp_disps::thread_disp_out_m_img_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1))) {
        disp_out_m_img_blk_n_W = m_axi_disp_out_m_img_WREADY.read();
    } else {
        disp_out_m_img_blk_n_W = ap_const_logic_1;
    }
}

void comp_disps::thread_exitcond2_fu_206_p2() {
    exitcond2_fu_206_p2 = (!j_assign_2_reg_127.read().is_01() || !ap_const_lv8_E1.is_01())? sc_lv<1>(): sc_lv<1>(j_assign_2_reg_127.read() == ap_const_lv8_E1);
}

void comp_disps::thread_exitcond3_fu_179_p2() {
    exitcond3_fu_179_p2 = (!i_assign_1_reg_104.read().is_01() || !ap_const_lv8_BC.is_01())? sc_lv<1>(): sc_lv<1>(i_assign_1_reg_104.read() == ap_const_lv8_BC);
}

void comp_disps::thread_exitcond_fu_272_p2() {
    exitcond_fu_272_p2 = (!min_d_reg_162.read().is_01() || !ap_const_lv5_1E.is_01())? sc_lv<1>(): sc_lv<1>(min_d_reg_162.read() == ap_const_lv5_1E);
}

void comp_disps::thread_i_fu_185_p2() {
    i_fu_185_p2 = (!i_assign_1_reg_104.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_assign_1_reg_104.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void comp_disps::thread_j_assign_2_cast5_fu_202_p1() {
    j_assign_2_cast5_fu_202_p1 = esl_zext<16,8>(j_assign_2_reg_127.read());
}

void comp_disps::thread_j_assign_min_d1_fu_294_p3() {
    j_assign_min_d1_fu_294_p3 = (!tmp_5_fu_289_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_5_fu_289_p2.read()[0].to_bool())? min_d_cast1_reg_346.read(): min_d1_reg_138.read());
}

void comp_disps::thread_j_fu_212_p2() {
    j_fu_212_p2 = (!j_assign_2_reg_127.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j_assign_2_reg_127.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void comp_disps::thread_m_axi_cost_in_m_img_ARADDR() {
    m_axi_cost_in_m_img_ARADDR =  (sc_lv<32>) (tmp_2_fu_257_p1.read());
}

void comp_disps::thread_m_axi_cost_in_m_img_ARBURST() {
    m_axi_cost_in_m_img_ARBURST = ap_const_lv2_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARCACHE() {
    m_axi_cost_in_m_img_ARCACHE = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARID() {
    m_axi_cost_in_m_img_ARID = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARLEN() {
    m_axi_cost_in_m_img_ARLEN = ap_const_lv32_1E;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARLOCK() {
    m_axi_cost_in_m_img_ARLOCK = ap_const_lv2_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARPROT() {
    m_axi_cost_in_m_img_ARPROT = ap_const_lv3_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARQOS() {
    m_axi_cost_in_m_img_ARQOS = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARREGION() {
    m_axi_cost_in_m_img_ARREGION = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARSIZE() {
    m_axi_cost_in_m_img_ARSIZE = ap_const_lv3_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARUSER() {
    m_axi_cost_in_m_img_ARUSER = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY.read()))) {
        m_axi_cost_in_m_img_ARVALID = ap_const_logic_1;
    } else {
        m_axi_cost_in_m_img_ARVALID = ap_const_logic_0;
    }
}

void comp_disps::thread_m_axi_cost_in_m_img_AWADDR() {
    m_axi_cost_in_m_img_AWADDR = ap_const_lv32_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWBURST() {
    m_axi_cost_in_m_img_AWBURST = ap_const_lv2_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWCACHE() {
    m_axi_cost_in_m_img_AWCACHE = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWID() {
    m_axi_cost_in_m_img_AWID = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWLEN() {
    m_axi_cost_in_m_img_AWLEN = ap_const_lv32_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWLOCK() {
    m_axi_cost_in_m_img_AWLOCK = ap_const_lv2_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWPROT() {
    m_axi_cost_in_m_img_AWPROT = ap_const_lv3_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWQOS() {
    m_axi_cost_in_m_img_AWQOS = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWREGION() {
    m_axi_cost_in_m_img_AWREGION = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWSIZE() {
    m_axi_cost_in_m_img_AWSIZE = ap_const_lv3_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWUSER() {
    m_axi_cost_in_m_img_AWUSER = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_AWVALID() {
    m_axi_cost_in_m_img_AWVALID = ap_const_logic_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_BREADY() {
    m_axi_cost_in_m_img_BREADY = ap_const_logic_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read())))) {
        m_axi_cost_in_m_img_RREADY = ap_const_logic_1;
    } else {
        m_axi_cost_in_m_img_RREADY = ap_const_logic_0;
    }
}

void comp_disps::thread_m_axi_cost_in_m_img_WDATA() {
    m_axi_cost_in_m_img_WDATA = ap_const_lv32_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_WID() {
    m_axi_cost_in_m_img_WID = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_WLAST() {
    m_axi_cost_in_m_img_WLAST = ap_const_logic_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_WSTRB() {
    m_axi_cost_in_m_img_WSTRB = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_WUSER() {
    m_axi_cost_in_m_img_WUSER = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_cost_in_m_img_WVALID() {
    m_axi_cost_in_m_img_WVALID = ap_const_logic_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARADDR() {
    m_axi_disp_out_m_img_ARADDR = ap_const_lv32_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARBURST() {
    m_axi_disp_out_m_img_ARBURST = ap_const_lv2_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARCACHE() {
    m_axi_disp_out_m_img_ARCACHE = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARID() {
    m_axi_disp_out_m_img_ARID = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARLEN() {
    m_axi_disp_out_m_img_ARLEN = ap_const_lv32_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARLOCK() {
    m_axi_disp_out_m_img_ARLOCK = ap_const_lv2_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARPROT() {
    m_axi_disp_out_m_img_ARPROT = ap_const_lv3_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARQOS() {
    m_axi_disp_out_m_img_ARQOS = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARREGION() {
    m_axi_disp_out_m_img_ARREGION = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARSIZE() {
    m_axi_disp_out_m_img_ARSIZE = ap_const_lv3_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARUSER() {
    m_axi_disp_out_m_img_ARUSER = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_ARVALID() {
    m_axi_disp_out_m_img_ARVALID = ap_const_logic_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWADDR() {
    m_axi_disp_out_m_img_AWADDR =  (sc_lv<32>) (tmp_fu_191_p1.read());
}

void comp_disps::thread_m_axi_disp_out_m_img_AWBURST() {
    m_axi_disp_out_m_img_AWBURST = ap_const_lv2_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWCACHE() {
    m_axi_disp_out_m_img_AWCACHE = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWID() {
    m_axi_disp_out_m_img_AWID = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWLEN() {
    m_axi_disp_out_m_img_AWLEN = ap_const_lv32_E1;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWLOCK() {
    m_axi_disp_out_m_img_AWLOCK = ap_const_lv2_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWPROT() {
    m_axi_disp_out_m_img_AWPROT = ap_const_lv3_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWQOS() {
    m_axi_disp_out_m_img_AWQOS = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWREGION() {
    m_axi_disp_out_m_img_AWREGION = ap_const_lv4_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWSIZE() {
    m_axi_disp_out_m_img_AWSIZE = ap_const_lv3_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWUSER() {
    m_axi_disp_out_m_img_AWUSER = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_179_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY.read()))) {
        m_axi_disp_out_m_img_AWVALID = ap_const_logic_1;
    } else {
        m_axi_disp_out_m_img_AWVALID = ap_const_logic_0;
    }
}

void comp_disps::thread_m_axi_disp_out_m_img_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(m_axi_disp_out_m_img_BVALID.read(), ap_const_logic_1))) {
        m_axi_disp_out_m_img_BREADY = ap_const_logic_1;
    } else {
        m_axi_disp_out_m_img_BREADY = ap_const_logic_0;
    }
}

void comp_disps::thread_m_axi_disp_out_m_img_RREADY() {
    m_axi_disp_out_m_img_RREADY = ap_const_logic_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_WDATA() {
    m_axi_disp_out_m_img_WDATA = min_d1_reg_138.read().range(8-1, 0);
}

void comp_disps::thread_m_axi_disp_out_m_img_WID() {
    m_axi_disp_out_m_img_WID = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_WLAST() {
    m_axi_disp_out_m_img_WLAST = ap_const_logic_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_WSTRB() {
    m_axi_disp_out_m_img_WSTRB = ap_const_lv1_1;
}

void comp_disps::thread_m_axi_disp_out_m_img_WUSER() {
    m_axi_disp_out_m_img_WUSER = ap_const_lv1_0;
}

void comp_disps::thread_m_axi_disp_out_m_img_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_disp_out_m_img_WREADY.read()))) {
        m_axi_disp_out_m_img_WVALID = ap_const_logic_1;
    } else {
        m_axi_disp_out_m_img_WVALID = ap_const_logic_0;
    }
}

void comp_disps::thread_min_c_2_min_c_fu_301_p3() {
    min_c_2_min_c_fu_301_p3 = (!tmp_5_fu_289_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_5_fu_289_p2.read()[0].to_bool())? min_c_1_reg_359.read(): min_c_reg_150.read());
}

void comp_disps::thread_min_d_cast1_fu_268_p1() {
    min_d_cast1_fu_268_p1 = esl_zext<32,5>(min_d_reg_162.read());
}

void comp_disps::thread_next_mul_fu_173_p2() {
    next_mul_fu_173_p2 = (!phi_mul_reg_115.read().is_01() || !ap_const_lv16_E1.is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_115.read()) + sc_biguint<16>(ap_const_lv16_E1));
}

void comp_disps::thread_p_fu_218_p2() {
    p_fu_218_p2 = (!phi_mul_reg_115.read().is_01() || !j_assign_2_cast5_fu_202_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_115.read()) + sc_biguint<16>(j_assign_2_cast5_fu_202_p1.read()));
}

void comp_disps::thread_p_shl1_cast_fu_244_p1() {
    p_shl1_cast_fu_244_p1 = esl_zext<22,17>(p_shl1_fu_236_p3.read());
}

void comp_disps::thread_p_shl1_fu_236_p3() {
    p_shl1_fu_236_p3 = esl_concat<16,1>(p_fu_218_p2.read(), ap_const_lv1_0);
}

void comp_disps::thread_p_shl_cast_fu_232_p1() {
    p_shl_cast_fu_232_p1 = esl_zext<22,21>(p_shl_fu_224_p3.read());
}

void comp_disps::thread_p_shl_fu_224_p3() {
    p_shl_fu_224_p3 = esl_concat<16,5>(p_fu_218_p2.read(), ap_const_lv5_0);
}

void comp_disps::thread_tmp_1_fu_254_p1() {
    tmp_1_fu_254_p1 = esl_sext<32,22>(tmp_9_reg_335.read());
}

void comp_disps::thread_tmp_2_fu_257_p1() {
    tmp_2_fu_257_p1 = esl_zext<64,32>(tmp_1_fu_254_p1.read());
}

void comp_disps::thread_tmp_5_fu_289_p2() {
    tmp_5_fu_289_p2 = (!min_c_1_reg_359.read().is_01() || !min_c_reg_150.read().is_01())? sc_lv<1>(): (sc_bigint<32>(min_c_1_reg_359.read()) < sc_bigint<32>(min_c_reg_150.read()));
}

void comp_disps::thread_tmp_9_fu_248_p2() {
    tmp_9_fu_248_p2 = (!p_shl_cast_fu_232_p1.read().is_01() || !p_shl1_cast_fu_244_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(p_shl_cast_fu_232_p1.read()) - sc_biguint<22>(p_shl1_cast_fu_244_p1.read()));
}

void comp_disps::thread_tmp_fu_191_p1() {
    tmp_fu_191_p1 = esl_zext<64,16>(phi_mul_reg_115.read());
}

void comp_disps::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_179_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_206_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_272_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_cost_in_m_img_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(m_axi_disp_out_m_img_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXX";
            break;
    }
}

}

