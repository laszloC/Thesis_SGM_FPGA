

================================================================
== Vivado HLS Report for 'comp_disps'
================================================================
* Date:           Wed Jun  5 20:42:07 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        hw_sgm
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  2919829|  2919829|  2919829|  2919829|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                 |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  2919828|  2919828|     15531|          -|          -|   188|    no    |
        | + Loop 1.1      |    15525|    15525|        69|          -|          -|   225|    no    |
        |  ++ Loop 1.1.1  |       60|       60|         2|          -|          -|    30|    no    |
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond3)
3 --> 
	4  / (!exitcond2)
	13  / (exitcond2)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / (!exitcond)
	3  / (exitcond)
12 --> 
	11  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %cost_in_m_img, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1269000, [9 x i8]* @p_str5, [6 x i8]* @p_str4, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 17 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %disp_out_m_img, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 42300, [8 x i8]* @p_str2, [6 x i8]* @p_str4, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 18 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.76ns)   --->   "br label %1" [hw_sgm/sgm.cpp:38]   --->   Operation 19 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%i_assign_1 = phi i8 [ 0, %0 ], [ %i, %5 ]"   --->   Operation 20 'phi' 'i_assign_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%phi_mul = phi i16 [ 0, %0 ], [ %next_mul, %5 ]"   --->   Operation 21 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (2.07ns)   --->   "%next_mul = add i16 %phi_mul, 225"   --->   Operation 22 'add' 'next_mul' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 188, i64 188, i64 188)"   --->   Operation 23 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.55ns)   --->   "%exitcond3 = icmp eq i8 %i_assign_1, -68" [hw_sgm/sgm.cpp:38]   --->   Operation 24 'icmp' 'exitcond3' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.91ns)   --->   "%i = add i8 %i_assign_1, 1" [hw_sgm/sgm.cpp:38]   --->   Operation 25 'add' 'i' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %exitcond3, label %6, label %.preheader.preheader" [hw_sgm/sgm.cpp:38]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp = zext i16 %phi_mul to i64" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:50]   --->   Operation 27 'zext' 'tmp' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%disp_out_m_img_addr = getelementptr inbounds i8* %disp_out_m_img, i64 %tmp" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:50]   --->   Operation 28 'getelementptr' 'disp_out_m_img_addr' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (8.75ns)   --->   "%p_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %disp_out_m_img_addr, i32 225)" [hw_sgm/sgm.cpp:50]   --->   Operation 29 'writereq' 'p_wr_req' <Predicate = (!exitcond3)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 30 [1/1] (1.76ns)   --->   "br label %.preheader" [hw_sgm/sgm.cpp:39]   --->   Operation 30 'br' <Predicate = (!exitcond3)> <Delay = 1.76>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "ret void" [hw_sgm/sgm.cpp:53]   --->   Operation 31 'ret' <Predicate = (exitcond3)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%j_assign_2 = phi i8 [ %j, %4 ], [ 0, %.preheader.preheader ]"   --->   Operation 32 'phi' 'j_assign_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%j_assign_2_cast5 = zext i8 %j_assign_2 to i16" [hw_sgm/sgm.cpp:39]   --->   Operation 33 'zext' 'j_assign_2_cast5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 225, i64 225, i64 225)"   --->   Operation 34 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (1.55ns)   --->   "%exitcond2 = icmp eq i8 %j_assign_2, -31" [hw_sgm/sgm.cpp:39]   --->   Operation 35 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (1.91ns)   --->   "%j = add i8 %j_assign_2, 1" [hw_sgm/sgm.cpp:39]   --->   Operation 36 'add' 'j' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %5, label %2" [hw_sgm/sgm.cpp:39]   --->   Operation 37 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (2.07ns)   --->   "%p = add i16 %phi_mul, %j_assign_2_cast5" [hw_sgm/sgm.cpp:44]   --->   Operation 38 'add' 'p' <Predicate = (!exitcond2)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%p_shl = call i21 @_ssdm_op_BitConcatenate.i21.i16.i5(i16 %p, i5 0)" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 39 'bitconcatenate' 'p_shl' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i21 %p_shl to i22" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 40 'zext' 'p_shl_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%p_shl1 = call i17 @_ssdm_op_BitConcatenate.i17.i16.i1(i16 %p, i1 false)" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 41 'bitconcatenate' 'p_shl1' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i17 %p_shl1 to i22" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 42 'zext' 'p_shl1_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (2.22ns)   --->   "%tmp_9 = sub i22 %p_shl_cast, %p_shl1_cast" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 43 'sub' 'tmp_9' <Predicate = (!exitcond2)> <Delay = 2.22> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [5/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 44 'writeresp' 'p_wr_resp' <Predicate = (exitcond2)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_1 = sext i22 %tmp_9 to i32" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 45 'sext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_2 = zext i32 %tmp_1 to i64" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 46 'zext' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%cost_in_m_img_addr = getelementptr inbounds i32* %cost_in_m_img, i64 %tmp_2" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 47 'getelementptr' 'cost_in_m_img_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [7/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 48 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 49 [6/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 49 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 50 [5/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 50 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 51 [4/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 51 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 52 [3/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 52 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 53 [2/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 53 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 54 [1/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 54 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 55 [1/1] (1.76ns)   --->   "br label %3" [hw_sgm/sgm.cpp:43]   --->   Operation 55 'br' <Predicate = true> <Delay = 1.76>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 56 [1/1] (0.00ns)   --->   "%min_d1 = phi i32 [ 31, %2 ], [ %j_assign_min_d1, %._crit_edge ]" [hw_sgm/sgm.cpp:45]   --->   Operation 56 'phi' 'min_d1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 57 [1/1] (0.00ns)   --->   "%min_c = phi i32 [ 255, %2 ], [ %min_c_2_min_c, %._crit_edge ]" [hw_sgm/sgm.cpp:45]   --->   Operation 57 'phi' 'min_c' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 58 [1/1] (0.00ns)   --->   "%min_d = phi i5 [ 0, %2 ], [ %d, %._crit_edge ]"   --->   Operation 58 'phi' 'min_d' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 59 [1/1] (0.00ns)   --->   "%min_d_cast1 = zext i5 %min_d to i32" [hw_sgm/sgm.cpp:47]   --->   Operation 59 'zext' 'min_d_cast1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 60 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30)"   --->   Operation 60 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 61 [1/1] (1.36ns)   --->   "%exitcond = icmp eq i5 %min_d, -2" [hw_sgm/sgm.cpp:43]   --->   Operation 61 'icmp' 'exitcond' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 62 [1/1] (1.78ns)   --->   "%d = add i5 %min_d, 1" [hw_sgm/sgm.cpp:43]   --->   Operation 62 'add' 'd' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %4, label %._crit_edge" [hw_sgm/sgm.cpp:43]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 64 [1/1] (8.75ns)   --->   "%min_c_1 = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %cost_in_m_img_addr)" [hw_sgm/sgm.cpp:45]   --->   Operation 64 'read' 'min_c_1' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_3 = trunc i32 %min_d1 to i8" [hw_sgm/sgm.cpp:50]   --->   Operation 65 'trunc' 'tmp_3' <Predicate = (exitcond)> <Delay = 0.00>
ST_11 : Operation 66 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %disp_out_m_img_addr, i8 %tmp_3, i1 true)" [hw_sgm/sgm.cpp:50]   --->   Operation 66 'write' <Predicate = (exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 67 [1/1] (0.00ns)   --->   "br label %.preheader" [hw_sgm/sgm.cpp:39]   --->   Operation 67 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 3.17>
ST_12 : Operation 68 [1/1] (2.47ns)   --->   "%tmp_5 = icmp slt i32 %min_c_1, %min_c" [hw_sgm/sgm.cpp:45]   --->   Operation 68 'icmp' 'tmp_5' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 69 [1/1] (0.69ns)   --->   "%j_assign_min_d1 = select i1 %tmp_5, i32 %min_d_cast1, i32 %min_d1" [hw_sgm/sgm.cpp:45]   --->   Operation 69 'select' 'j_assign_min_d1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 70 [1/1] (0.69ns)   --->   "%min_c_2_min_c = select i1 %tmp_5, i32 %min_c_1, i32 %min_c" [hw_sgm/sgm.cpp:45]   --->   Operation 70 'select' 'min_c_2_min_c' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 71 [1/1] (0.00ns)   --->   "br label %3" [hw_sgm/sgm.cpp:43]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>

State 13 <SV = 3> <Delay = 8.75>
ST_13 : Operation 72 [4/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 72 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 4> <Delay = 8.75>
ST_14 : Operation 73 [3/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 73 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 5> <Delay = 8.75>
ST_15 : Operation 74 [2/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 74 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 6> <Delay = 8.75>
ST_16 : Operation 75 [1/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 75 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 76 [1/1] (0.00ns)   --->   "br label %1" [hw_sgm/sgm.cpp:38]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', hw_sgm/sgm.cpp:38) [7]  (1.77 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	'phi' operation ('phi_mul') with incoming values : ('next_mul') [8]  (0 ns)
	'getelementptr' operation ('disp_out_m_img_addr', hw_sgm/common.h:39->hw_sgm/sgm.cpp:50) [16]  (0 ns)
	bus request on port 'disp_out_m_img' (hw_sgm/sgm.cpp:50) [17]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus access on port 'disp_out_m_img' (hw_sgm/sgm.cpp:50) [58]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('cost_in_m_img_addr', hw_sgm/common.h:39->hw_sgm/sgm.cpp:45) [35]  (0 ns)
	bus request on port 'cost_in_m_img' (hw_sgm/sgm.cpp:45) [36]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'cost_in_m_img' (hw_sgm/sgm.cpp:45) [36]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'cost_in_m_img' (hw_sgm/sgm.cpp:45) [36]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'cost_in_m_img' (hw_sgm/sgm.cpp:45) [36]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'cost_in_m_img' (hw_sgm/sgm.cpp:45) [36]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'cost_in_m_img' (hw_sgm/sgm.cpp:45) [36]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus request on port 'cost_in_m_img' (hw_sgm/sgm.cpp:45) [36]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	'phi' operation ('min_d1', hw_sgm/sgm.cpp:45) with incoming values : ('j_assign_min_d1', hw_sgm/sgm.cpp:45) [39]  (0 ns)
	bus write on port 'disp_out_m_img' (hw_sgm/sgm.cpp:50) [55]  (8.75 ns)

 <State 12>: 3.17ns
The critical path consists of the following:
	'icmp' operation ('tmp_5', hw_sgm/sgm.cpp:45) [49]  (2.47 ns)
	'select' operation ('j_assign_min_d1', hw_sgm/sgm.cpp:45) [50]  (0.698 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'disp_out_m_img' (hw_sgm/sgm.cpp:50) [58]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus access on port 'disp_out_m_img' (hw_sgm/sgm.cpp:50) [58]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus access on port 'disp_out_m_img' (hw_sgm/sgm.cpp:50) [58]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus access on port 'disp_out_m_img' (hw_sgm/sgm.cpp:50) [58]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
