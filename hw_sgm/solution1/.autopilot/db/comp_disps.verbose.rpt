

================================================================
== Vivado HLS Report for 'comp_disps'
================================================================
* Date:           Wed Jun  5 20:42:08 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        hw_sgm
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  2919829|  2919829|  2919829|  2919829|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                 |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  2919828|  2919828|     15531|          -|          -|   188|    no    |
        | + Loop 1.1      |    15525|    15525|        69|          -|          -|   225|    no    |
        |  ++ Loop 1.1.1  |       60|       60|         2|          -|          -|    30|    no    |
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|    243|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|    211|
|Register         |        -|      -|     215|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|     215|    454|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|   ~0   |   ~0  |
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +---------------------------+----------+-------+---+----+------------+------------+
    |       Variable Name       | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +---------------------------+----------+-------+---+----+------------+------------+
    |d_fu_278_p2                |     +    |      0|  0|  15|           5|           1|
    |i_fu_185_p2                |     +    |      0|  0|  15|           8|           1|
    |j_fu_212_p2                |     +    |      0|  0|  15|           8|           1|
    |next_mul_fu_173_p2         |     +    |      0|  0|  23|          16|           8|
    |p_fu_218_p2                |     +    |      0|  0|  23|          16|          16|
    |tmp_9_fu_248_p2            |     -    |      0|  0|  29|          22|          22|
    |ap_block_state11           |    and   |      0|  0|   2|           1|           1|
    |ap_block_state11_io        |    and   |      0|  0|   2|           1|           1|
    |ap_block_state2_io         |    and   |      0|  0|   2|           1|           1|
    |ap_condition_432           |    and   |      0|  0|   2|           1|           1|
    |exitcond2_fu_206_p2        |   icmp   |      0|  0|  11|           8|           6|
    |exitcond3_fu_179_p2        |   icmp   |      0|  0|  11|           8|           8|
    |exitcond_fu_272_p2         |   icmp   |      0|  0|  11|           5|           3|
    |tmp_5_fu_289_p2            |   icmp   |      0|  0|  18|          32|          32|
    |j_assign_min_d1_fu_294_p3  |  select  |      0|  0|  32|           1|          32|
    |min_c_2_min_c_fu_301_p3    |  select  |      0|  0|  32|           1|          32|
    +---------------------------+----------+-------+---+----+------------+------------+
    |Total                      |          |      0|  0| 243|         134|         166|
    +---------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +---------------------------------------------+----+-----------+-----+-----------+
    |                     Name                    | LUT| Input Size| Bits| Total Bits|
    +---------------------------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm                                    |  85|         17|    1|         17|
    |ap_sig_ioackin_m_axi_cost_in_m_img_ARREADY   |   9|          2|    1|          2|
    |ap_sig_ioackin_m_axi_disp_out_m_img_AWREADY  |   9|          2|    1|          2|
    |ap_sig_ioackin_m_axi_disp_out_m_img_WREADY   |   9|          2|    1|          2|
    |cost_in_m_img_blk_n_AR                       |   9|          2|    1|          2|
    |cost_in_m_img_blk_n_R                        |   9|          2|    1|          2|
    |disp_out_m_img_blk_n_AW                      |   9|          2|    1|          2|
    |disp_out_m_img_blk_n_B                       |   9|          2|    1|          2|
    |disp_out_m_img_blk_n_W                       |   9|          2|    1|          2|
    |i_assign_1_reg_104                           |   9|          2|    8|         16|
    |j_assign_2_reg_127                           |   9|          2|    8|         16|
    |min_c_reg_150                                |   9|          2|   32|         64|
    |min_d1_reg_138                               |   9|          2|   32|         64|
    |min_d_reg_162                                |   9|          2|    5|         10|
    |phi_mul_reg_115                              |   9|          2|   16|         32|
    +---------------------------------------------+----+-----------+-----+-----------+
    |Total                                        | 211|         45|  110|        235|
    +---------------------------------------------+----+-----------+-----+-----------+

    * Register: 
    +---------------------------------------------+----+----+-----+-----------+
    |                     Name                    | FF | LUT| Bits| Const Bits|
    +---------------------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                                    |  16|   0|   16|          0|
    |ap_reg_ioackin_m_axi_cost_in_m_img_ARREADY   |   1|   0|    1|          0|
    |ap_reg_ioackin_m_axi_disp_out_m_img_AWREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_m_axi_disp_out_m_img_WREADY   |   1|   0|    1|          0|
    |d_reg_354                                    |   5|   0|    5|          0|
    |i_assign_1_reg_104                           |   8|   0|    8|          0|
    |i_reg_316                                    |   8|   0|    8|          0|
    |j_assign_2_reg_127                           |   8|   0|    8|          0|
    |j_reg_330                                    |   8|   0|    8|          0|
    |min_c_1_reg_359                              |  32|   0|   32|          0|
    |min_c_reg_150                                |  32|   0|   32|          0|
    |min_d1_reg_138                               |  32|   0|   32|          0|
    |min_d_cast1_reg_346                          |   5|   0|   32|         27|
    |min_d_reg_162                                |   5|   0|    5|          0|
    |next_mul_reg_308                             |  16|   0|   16|          0|
    |phi_mul_reg_115                              |  16|   0|   16|          0|
    |tmp_9_reg_335                                |  21|   0|   22|          1|
    +---------------------------------------------+----+----+-----+-----------+
    |Total                                        | 215|   0|  243|         28|
    +---------------------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-------------------------------+-----+-----+------------+----------------+--------------+
|           RTL Ports           | Dir | Bits|  Protocol  |  Source Object |    C Type    |
+-------------------------------+-----+-----+------------+----------------+--------------+
|ap_clk                         |  in |    1| ap_ctrl_hs |   comp_disps   | return value |
|ap_rst                         |  in |    1| ap_ctrl_hs |   comp_disps   | return value |
|ap_start                       |  in |    1| ap_ctrl_hs |   comp_disps   | return value |
|ap_done                        | out |    1| ap_ctrl_hs |   comp_disps   | return value |
|ap_idle                        | out |    1| ap_ctrl_hs |   comp_disps   | return value |
|ap_ready                       | out |    1| ap_ctrl_hs |   comp_disps   | return value |
|m_axi_cost_in_m_img_AWVALID    | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWREADY    |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWADDR     | out |   32|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWID       | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWLEN      | out |   32|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWSIZE     | out |    3|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWBURST    | out |    2|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWLOCK     | out |    2|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWCACHE    | out |    4|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWPROT     | out |    3|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWQOS      | out |    4|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWREGION   | out |    4|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_AWUSER     | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_WVALID     | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_WREADY     |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_WDATA      | out |   32|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_WSTRB      | out |    4|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_WLAST      | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_WID        | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_WUSER      | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARVALID    | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARREADY    |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARADDR     | out |   32|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARID       | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARLEN      | out |   32|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARSIZE     | out |    3|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARBURST    | out |    2|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARLOCK     | out |    2|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARCACHE    | out |    4|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARPROT     | out |    3|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARQOS      | out |    4|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARREGION   | out |    4|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_ARUSER     | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_RVALID     |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_RREADY     | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_RDATA      |  in |   32|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_RLAST      |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_RID        |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_RUSER      |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_RRESP      |  in |    2|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_BVALID     |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_BREADY     | out |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_BRESP      |  in |    2|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_BID        |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_cost_in_m_img_BUSER      |  in |    1|    m_axi   |  cost_in_m_img |    pointer   |
|m_axi_disp_out_m_img_AWVALID   | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWREADY   |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWADDR    | out |   32|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWID      | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWLEN     | out |   32|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWSIZE    | out |    3|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWBURST   | out |    2|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWLOCK    | out |    2|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWCACHE   | out |    4|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWPROT    | out |    3|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWQOS     | out |    4|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWREGION  | out |    4|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_AWUSER    | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_WVALID    | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_WREADY    |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_WDATA     | out |    8|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_WSTRB     | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_WLAST     | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_WID       | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_WUSER     | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARVALID   | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARREADY   |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARADDR    | out |   32|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARID      | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARLEN     | out |   32|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARSIZE    | out |    3|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARBURST   | out |    2|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARLOCK    | out |    2|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARCACHE   | out |    4|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARPROT    | out |    3|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARQOS     | out |    4|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARREGION  | out |    4|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_ARUSER    | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_RVALID    |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_RREADY    | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_RDATA     |  in |    8|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_RLAST     |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_RID       |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_RUSER     |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_RRESP     |  in |    2|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_BVALID    |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_BREADY    | out |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_BRESP     |  in |    2|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_BID       |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
|m_axi_disp_out_m_img_BUSER     |  in |    1|    m_axi   | disp_out_m_img |    pointer   |
+-------------------------------+-----+-----+------------+----------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond3)
3 --> 
	4  / (!exitcond2)
	13  / (exitcond2)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / (!exitcond)
	3  / (exitcond)
12 --> 
	11  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %cost_in_m_img, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1269000, [9 x i8]* @p_str5, [6 x i8]* @p_str4, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 17 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %disp_out_m_img, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 42300, [8 x i8]* @p_str2, [6 x i8]* @p_str4, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 18 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.76ns)   --->   "br label %1" [hw_sgm/sgm.cpp:38]   --->   Operation 19 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%i_assign_1 = phi i8 [ 0, %0 ], [ %i, %5 ]"   --->   Operation 20 'phi' 'i_assign_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%phi_mul = phi i16 [ 0, %0 ], [ %next_mul, %5 ]"   --->   Operation 21 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (2.07ns)   --->   "%next_mul = add i16 %phi_mul, 225"   --->   Operation 22 'add' 'next_mul' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.25> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 188, i64 188, i64 188)"   --->   Operation 23 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.55ns)   --->   "%exitcond3 = icmp eq i8 %i_assign_1, -68" [hw_sgm/sgm.cpp:38]   --->   Operation 24 'icmp' 'exitcond3' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.91ns)   --->   "%i = add i8 %i_assign_1, 1" [hw_sgm/sgm.cpp:38]   --->   Operation 25 'add' 'i' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.25> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %exitcond3, label %6, label %.preheader.preheader" [hw_sgm/sgm.cpp:38]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp = zext i16 %phi_mul to i64" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:50]   --->   Operation 27 'zext' 'tmp' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%disp_out_m_img_addr = getelementptr inbounds i8* %disp_out_m_img, i64 %tmp" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:50]   --->   Operation 28 'getelementptr' 'disp_out_m_img_addr' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (8.75ns)   --->   "%p_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %disp_out_m_img_addr, i32 225)" [hw_sgm/sgm.cpp:50]   --->   Operation 29 'writereq' 'p_wr_req' <Predicate = (!exitcond3)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 30 [1/1] (1.76ns)   --->   "br label %.preheader" [hw_sgm/sgm.cpp:39]   --->   Operation 30 'br' <Predicate = (!exitcond3)> <Delay = 1.76>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "ret void" [hw_sgm/sgm.cpp:53]   --->   Operation 31 'ret' <Predicate = (exitcond3)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%j_assign_2 = phi i8 [ %j, %4 ], [ 0, %.preheader.preheader ]"   --->   Operation 32 'phi' 'j_assign_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%j_assign_2_cast5 = zext i8 %j_assign_2 to i16" [hw_sgm/sgm.cpp:39]   --->   Operation 33 'zext' 'j_assign_2_cast5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 225, i64 225, i64 225)"   --->   Operation 34 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (1.55ns)   --->   "%exitcond2 = icmp eq i8 %j_assign_2, -31" [hw_sgm/sgm.cpp:39]   --->   Operation 35 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (1.91ns)   --->   "%j = add i8 %j_assign_2, 1" [hw_sgm/sgm.cpp:39]   --->   Operation 36 'add' 'j' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.25> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %5, label %2" [hw_sgm/sgm.cpp:39]   --->   Operation 37 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (2.07ns)   --->   "%p = add i16 %phi_mul, %j_assign_2_cast5" [hw_sgm/sgm.cpp:44]   --->   Operation 38 'add' 'p' <Predicate = (!exitcond2)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.25> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%p_shl = call i21 @_ssdm_op_BitConcatenate.i21.i16.i5(i16 %p, i5 0)" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 39 'bitconcatenate' 'p_shl' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i21 %p_shl to i22" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 40 'zext' 'p_shl_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%p_shl1 = call i17 @_ssdm_op_BitConcatenate.i17.i16.i1(i16 %p, i1 false)" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 41 'bitconcatenate' 'p_shl1' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i17 %p_shl1 to i22" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 42 'zext' 'p_shl1_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (2.22ns)   --->   "%tmp_9 = sub i22 %p_shl_cast, %p_shl1_cast" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 43 'sub' 'tmp_9' <Predicate = (!exitcond2)> <Delay = 2.22> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.25> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [5/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 44 'writeresp' 'p_wr_resp' <Predicate = (exitcond2)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_1 = sext i22 %tmp_9 to i32" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 45 'sext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_2 = zext i32 %tmp_1 to i64" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 46 'zext' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%cost_in_m_img_addr = getelementptr inbounds i32* %cost_in_m_img, i64 %tmp_2" [hw_sgm/common.h:39->hw_sgm/sgm.cpp:45]   --->   Operation 47 'getelementptr' 'cost_in_m_img_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [7/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 48 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 49 [6/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 49 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 50 [5/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 50 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 51 [4/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 51 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 52 [3/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 52 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 53 [2/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 53 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 54 [1/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %cost_in_m_img_addr, i32 30)" [hw_sgm/sgm.cpp:45]   --->   Operation 54 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 55 [1/1] (1.76ns)   --->   "br label %3" [hw_sgm/sgm.cpp:43]   --->   Operation 55 'br' <Predicate = true> <Delay = 1.76>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 56 [1/1] (0.00ns)   --->   "%min_d1 = phi i32 [ 31, %2 ], [ %j_assign_min_d1, %._crit_edge ]" [hw_sgm/sgm.cpp:45]   --->   Operation 56 'phi' 'min_d1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 57 [1/1] (0.00ns)   --->   "%min_c = phi i32 [ 255, %2 ], [ %min_c_2_min_c, %._crit_edge ]" [hw_sgm/sgm.cpp:45]   --->   Operation 57 'phi' 'min_c' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 58 [1/1] (0.00ns)   --->   "%min_d = phi i5 [ 0, %2 ], [ %d, %._crit_edge ]"   --->   Operation 58 'phi' 'min_d' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 59 [1/1] (0.00ns)   --->   "%min_d_cast1 = zext i5 %min_d to i32" [hw_sgm/sgm.cpp:47]   --->   Operation 59 'zext' 'min_d_cast1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 60 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30)"   --->   Operation 60 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 61 [1/1] (1.36ns)   --->   "%exitcond = icmp eq i5 %min_d, -2" [hw_sgm/sgm.cpp:43]   --->   Operation 61 'icmp' 'exitcond' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 62 [1/1] (1.78ns)   --->   "%d = add i5 %min_d, 1" [hw_sgm/sgm.cpp:43]   --->   Operation 62 'add' 'd' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.25> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %4, label %._crit_edge" [hw_sgm/sgm.cpp:43]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 64 [1/1] (8.75ns)   --->   "%min_c_1 = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %cost_in_m_img_addr)" [hw_sgm/sgm.cpp:45]   --->   Operation 64 'read' 'min_c_1' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_3 = trunc i32 %min_d1 to i8" [hw_sgm/sgm.cpp:50]   --->   Operation 65 'trunc' 'tmp_3' <Predicate = (exitcond)> <Delay = 0.00>
ST_11 : Operation 66 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %disp_out_m_img_addr, i8 %tmp_3, i1 true)" [hw_sgm/sgm.cpp:50]   --->   Operation 66 'write' <Predicate = (exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 67 [1/1] (0.00ns)   --->   "br label %.preheader" [hw_sgm/sgm.cpp:39]   --->   Operation 67 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 3.17>
ST_12 : Operation 68 [1/1] (2.47ns)   --->   "%tmp_5 = icmp slt i32 %min_c_1, %min_c" [hw_sgm/sgm.cpp:45]   --->   Operation 68 'icmp' 'tmp_5' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 69 [1/1] (0.69ns)   --->   "%j_assign_min_d1 = select i1 %tmp_5, i32 %min_d_cast1, i32 %min_d1" [hw_sgm/sgm.cpp:45]   --->   Operation 69 'select' 'j_assign_min_d1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 70 [1/1] (0.69ns)   --->   "%min_c_2_min_c = select i1 %tmp_5, i32 %min_c_1, i32 %min_c" [hw_sgm/sgm.cpp:45]   --->   Operation 70 'select' 'min_c_2_min_c' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 71 [1/1] (0.00ns)   --->   "br label %3" [hw_sgm/sgm.cpp:43]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>

State 13 <SV = 3> <Delay = 8.75>
ST_13 : Operation 72 [4/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 72 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 4> <Delay = 8.75>
ST_14 : Operation 73 [3/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 73 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 5> <Delay = 8.75>
ST_15 : Operation 74 [2/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 74 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 6> <Delay = 8.75>
ST_16 : Operation 75 [1/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %disp_out_m_img_addr)" [hw_sgm/sgm.cpp:50]   --->   Operation 75 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 76 [1/1] (0.00ns)   --->   "br label %1" [hw_sgm/sgm.cpp:38]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ cost_in_m_img]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ disp_out_m_img]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_17         (specinterface    ) [ 00000000000000000]
StgValue_18         (specinterface    ) [ 00000000000000000]
StgValue_19         (br               ) [ 01111111111111111]
i_assign_1          (phi              ) [ 00100000000000000]
phi_mul             (phi              ) [ 00111111111110000]
next_mul            (add              ) [ 01111111111111111]
empty               (speclooptripcount) [ 00000000000000000]
exitcond3           (icmp             ) [ 00111111111111111]
i                   (add              ) [ 01111111111111111]
StgValue_26         (br               ) [ 00000000000000000]
tmp                 (zext             ) [ 00000000000000000]
disp_out_m_img_addr (getelementptr    ) [ 00011111111111111]
p_wr_req            (writereq         ) [ 00000000000000000]
StgValue_30         (br               ) [ 00111111111111111]
StgValue_31         (ret              ) [ 00000000000000000]
j_assign_2          (phi              ) [ 00010000000000000]
j_assign_2_cast5    (zext             ) [ 00000000000000000]
empty_2             (speclooptripcount) [ 00000000000000000]
exitcond2           (icmp             ) [ 00111111111111111]
j                   (add              ) [ 00111111111111111]
StgValue_37         (br               ) [ 00000000000000000]
p                   (add              ) [ 00000000000000000]
p_shl               (bitconcatenate   ) [ 00000000000000000]
p_shl_cast          (zext             ) [ 00000000000000000]
p_shl1              (bitconcatenate   ) [ 00000000000000000]
p_shl1_cast         (zext             ) [ 00000000000000000]
tmp_9               (sub              ) [ 00001000000000000]
tmp_1               (sext             ) [ 00000000000000000]
tmp_2               (zext             ) [ 00000000000000000]
cost_in_m_img_addr  (getelementptr    ) [ 00000111111110000]
p_rd_req            (readreq          ) [ 00000000000000000]
StgValue_55         (br               ) [ 00111111111111111]
min_d1              (phi              ) [ 00000000000110000]
min_c               (phi              ) [ 00000000000110000]
min_d               (phi              ) [ 00000000000100000]
min_d_cast1         (zext             ) [ 00000000000010000]
empty_3             (speclooptripcount) [ 00000000000000000]
exitcond            (icmp             ) [ 00111111111111111]
d                   (add              ) [ 00111111111111111]
StgValue_63         (br               ) [ 00000000000000000]
min_c_1             (read             ) [ 00000000000010000]
tmp_3               (trunc            ) [ 00000000000000000]
StgValue_66         (write            ) [ 00000000000000000]
StgValue_67         (br               ) [ 00111111111111111]
tmp_5               (icmp             ) [ 00000000000000000]
j_assign_min_d1     (select           ) [ 00111111111111111]
min_c_2_min_c       (select           ) [ 00111111111111111]
StgValue_71         (br               ) [ 00111111111111111]
p_wr_resp           (writeresp        ) [ 00000000000000000]
StgValue_76         (br               ) [ 01111111111111111]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="cost_in_m_img">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="cost_in_m_img"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="disp_out_m_img">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="disp_out_m_img"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i21.i16.i5"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i17.i16.i1"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1004" name="grp_writeresp_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="1" slack="0"/>
<pin id="78" dir="0" index="1" bw="8" slack="0"/>
<pin id="79" dir="0" index="2" bw="9" slack="0"/>
<pin id="80" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="p_wr_req/2 p_wr_resp/3 "/>
</bind>
</comp>

<comp id="84" class="1004" name="grp_readreq_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="1" slack="0"/>
<pin id="86" dir="0" index="1" bw="32" slack="0"/>
<pin id="87" dir="0" index="2" bw="6" slack="0"/>
<pin id="88" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="p_rd_req/4 "/>
</bind>
</comp>

<comp id="91" class="1004" name="min_c_1_read_fu_91">
<pin_list>
<pin id="92" dir="0" index="0" bw="32" slack="0"/>
<pin id="93" dir="0" index="1" bw="32" slack="7"/>
<pin id="94" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="min_c_1/11 "/>
</bind>
</comp>

<comp id="96" class="1004" name="StgValue_66_write_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="0" slack="0"/>
<pin id="98" dir="0" index="1" bw="8" slack="9"/>
<pin id="99" dir="0" index="2" bw="8" slack="0"/>
<pin id="100" dir="0" index="3" bw="1" slack="0"/>
<pin id="101" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_66/11 "/>
</bind>
</comp>

<comp id="104" class="1005" name="i_assign_1_reg_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="8" slack="1"/>
<pin id="106" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="i_assign_1 (phireg) "/>
</bind>
</comp>

<comp id="108" class="1004" name="i_assign_1_phi_fu_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="1" slack="1"/>
<pin id="110" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="111" dir="0" index="2" bw="8" slack="0"/>
<pin id="112" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="113" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_assign_1/2 "/>
</bind>
</comp>

<comp id="115" class="1005" name="phi_mul_reg_115">
<pin_list>
<pin id="116" dir="0" index="0" bw="16" slack="1"/>
<pin id="117" dir="1" index="1" bw="16" slack="1"/>
</pin_list>
<bind>
<opset="phi_mul (phireg) "/>
</bind>
</comp>

<comp id="119" class="1004" name="phi_mul_phi_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="1" slack="1"/>
<pin id="121" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="122" dir="0" index="2" bw="16" slack="0"/>
<pin id="123" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="124" dir="1" index="4" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="phi_mul/2 "/>
</bind>
</comp>

<comp id="127" class="1005" name="j_assign_2_reg_127">
<pin_list>
<pin id="128" dir="0" index="0" bw="8" slack="1"/>
<pin id="129" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="j_assign_2 (phireg) "/>
</bind>
</comp>

<comp id="131" class="1004" name="j_assign_2_phi_fu_131">
<pin_list>
<pin id="132" dir="0" index="0" bw="8" slack="0"/>
<pin id="133" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="134" dir="0" index="2" bw="1" slack="1"/>
<pin id="135" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="136" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="j_assign_2/3 "/>
</bind>
</comp>

<comp id="138" class="1005" name="min_d1_reg_138">
<pin_list>
<pin id="139" dir="0" index="0" bw="32" slack="1"/>
<pin id="140" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="min_d1 (phireg) "/>
</bind>
</comp>

<comp id="142" class="1004" name="min_d1_phi_fu_142">
<pin_list>
<pin id="143" dir="0" index="0" bw="6" slack="1"/>
<pin id="144" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="145" dir="0" index="2" bw="32" slack="1"/>
<pin id="146" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="147" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="min_d1/11 "/>
</bind>
</comp>

<comp id="150" class="1005" name="min_c_reg_150">
<pin_list>
<pin id="151" dir="0" index="0" bw="32" slack="1"/>
<pin id="152" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="min_c (phireg) "/>
</bind>
</comp>

<comp id="154" class="1004" name="min_c_phi_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="9" slack="1"/>
<pin id="156" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="157" dir="0" index="2" bw="32" slack="1"/>
<pin id="158" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="159" dir="1" index="4" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="min_c/11 "/>
</bind>
</comp>

<comp id="162" class="1005" name="min_d_reg_162">
<pin_list>
<pin id="163" dir="0" index="0" bw="5" slack="1"/>
<pin id="164" dir="1" index="1" bw="5" slack="1"/>
</pin_list>
<bind>
<opset="min_d (phireg) "/>
</bind>
</comp>

<comp id="166" class="1004" name="min_d_phi_fu_166">
<pin_list>
<pin id="167" dir="0" index="0" bw="1" slack="1"/>
<pin id="168" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="169" dir="0" index="2" bw="5" slack="0"/>
<pin id="170" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="171" dir="1" index="4" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="min_d/11 "/>
</bind>
</comp>

<comp id="173" class="1004" name="next_mul_fu_173">
<pin_list>
<pin id="174" dir="0" index="0" bw="16" slack="0"/>
<pin id="175" dir="0" index="1" bw="9" slack="0"/>
<pin id="176" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="next_mul/2 "/>
</bind>
</comp>

<comp id="179" class="1004" name="exitcond3_fu_179">
<pin_list>
<pin id="180" dir="0" index="0" bw="8" slack="0"/>
<pin id="181" dir="0" index="1" bw="8" slack="0"/>
<pin id="182" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond3/2 "/>
</bind>
</comp>

<comp id="185" class="1004" name="i_fu_185">
<pin_list>
<pin id="186" dir="0" index="0" bw="8" slack="0"/>
<pin id="187" dir="0" index="1" bw="1" slack="0"/>
<pin id="188" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i/2 "/>
</bind>
</comp>

<comp id="191" class="1004" name="tmp_fu_191">
<pin_list>
<pin id="192" dir="0" index="0" bw="16" slack="0"/>
<pin id="193" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="195" class="1004" name="disp_out_m_img_addr_fu_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="32" slack="0"/>
<pin id="197" dir="0" index="1" bw="32" slack="0"/>
<pin id="198" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="disp_out_m_img_addr/2 "/>
</bind>
</comp>

<comp id="202" class="1004" name="j_assign_2_cast5_fu_202">
<pin_list>
<pin id="203" dir="0" index="0" bw="8" slack="0"/>
<pin id="204" dir="1" index="1" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="j_assign_2_cast5/3 "/>
</bind>
</comp>

<comp id="206" class="1004" name="exitcond2_fu_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="8" slack="0"/>
<pin id="208" dir="0" index="1" bw="8" slack="0"/>
<pin id="209" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond2/3 "/>
</bind>
</comp>

<comp id="212" class="1004" name="j_fu_212">
<pin_list>
<pin id="213" dir="0" index="0" bw="8" slack="0"/>
<pin id="214" dir="0" index="1" bw="1" slack="0"/>
<pin id="215" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="j/3 "/>
</bind>
</comp>

<comp id="218" class="1004" name="p_fu_218">
<pin_list>
<pin id="219" dir="0" index="0" bw="16" slack="1"/>
<pin id="220" dir="0" index="1" bw="8" slack="0"/>
<pin id="221" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="p/3 "/>
</bind>
</comp>

<comp id="224" class="1004" name="p_shl_fu_224">
<pin_list>
<pin id="225" dir="0" index="0" bw="21" slack="0"/>
<pin id="226" dir="0" index="1" bw="16" slack="0"/>
<pin id="227" dir="0" index="2" bw="1" slack="0"/>
<pin id="228" dir="1" index="3" bw="21" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="p_shl/3 "/>
</bind>
</comp>

<comp id="232" class="1004" name="p_shl_cast_fu_232">
<pin_list>
<pin id="233" dir="0" index="0" bw="21" slack="0"/>
<pin id="234" dir="1" index="1" bw="22" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="p_shl_cast/3 "/>
</bind>
</comp>

<comp id="236" class="1004" name="p_shl1_fu_236">
<pin_list>
<pin id="237" dir="0" index="0" bw="17" slack="0"/>
<pin id="238" dir="0" index="1" bw="16" slack="0"/>
<pin id="239" dir="0" index="2" bw="1" slack="0"/>
<pin id="240" dir="1" index="3" bw="17" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="p_shl1/3 "/>
</bind>
</comp>

<comp id="244" class="1004" name="p_shl1_cast_fu_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="17" slack="0"/>
<pin id="246" dir="1" index="1" bw="22" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="p_shl1_cast/3 "/>
</bind>
</comp>

<comp id="248" class="1004" name="tmp_9_fu_248">
<pin_list>
<pin id="249" dir="0" index="0" bw="21" slack="0"/>
<pin id="250" dir="0" index="1" bw="17" slack="0"/>
<pin id="251" dir="1" index="2" bw="22" slack="1"/>
</pin_list>
<bind>
<opcode="sub(10) " fcode="sub"/>
<opset="tmp_9/3 "/>
</bind>
</comp>

<comp id="254" class="1004" name="tmp_1_fu_254">
<pin_list>
<pin id="255" dir="0" index="0" bw="22" slack="1"/>
<pin id="256" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="tmp_1/4 "/>
</bind>
</comp>

<comp id="257" class="1004" name="tmp_2_fu_257">
<pin_list>
<pin id="258" dir="0" index="0" bw="22" slack="0"/>
<pin id="259" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp_2/4 "/>
</bind>
</comp>

<comp id="261" class="1004" name="cost_in_m_img_addr_fu_261">
<pin_list>
<pin id="262" dir="0" index="0" bw="32" slack="0"/>
<pin id="263" dir="0" index="1" bw="32" slack="0"/>
<pin id="264" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="cost_in_m_img_addr/4 "/>
</bind>
</comp>

<comp id="268" class="1004" name="min_d_cast1_fu_268">
<pin_list>
<pin id="269" dir="0" index="0" bw="5" slack="0"/>
<pin id="270" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="min_d_cast1/11 "/>
</bind>
</comp>

<comp id="272" class="1004" name="exitcond_fu_272">
<pin_list>
<pin id="273" dir="0" index="0" bw="5" slack="0"/>
<pin id="274" dir="0" index="1" bw="5" slack="0"/>
<pin id="275" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond/11 "/>
</bind>
</comp>

<comp id="278" class="1004" name="d_fu_278">
<pin_list>
<pin id="279" dir="0" index="0" bw="5" slack="0"/>
<pin id="280" dir="0" index="1" bw="1" slack="0"/>
<pin id="281" dir="1" index="2" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="d/11 "/>
</bind>
</comp>

<comp id="284" class="1004" name="tmp_3_fu_284">
<pin_list>
<pin id="285" dir="0" index="0" bw="32" slack="0"/>
<pin id="286" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_3/11 "/>
</bind>
</comp>

<comp id="289" class="1004" name="tmp_5_fu_289">
<pin_list>
<pin id="290" dir="0" index="0" bw="32" slack="1"/>
<pin id="291" dir="0" index="1" bw="32" slack="1"/>
<pin id="292" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_5/12 "/>
</bind>
</comp>

<comp id="294" class="1004" name="j_assign_min_d1_fu_294">
<pin_list>
<pin id="295" dir="0" index="0" bw="1" slack="0"/>
<pin id="296" dir="0" index="1" bw="32" slack="1"/>
<pin id="297" dir="0" index="2" bw="32" slack="1"/>
<pin id="298" dir="1" index="3" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="j_assign_min_d1/12 "/>
</bind>
</comp>

<comp id="301" class="1004" name="min_c_2_min_c_fu_301">
<pin_list>
<pin id="302" dir="0" index="0" bw="1" slack="0"/>
<pin id="303" dir="0" index="1" bw="32" slack="1"/>
<pin id="304" dir="0" index="2" bw="32" slack="1"/>
<pin id="305" dir="1" index="3" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="min_c_2_min_c/12 "/>
</bind>
</comp>

<comp id="308" class="1005" name="next_mul_reg_308">
<pin_list>
<pin id="309" dir="0" index="0" bw="16" slack="0"/>
<pin id="310" dir="1" index="1" bw="16" slack="0"/>
</pin_list>
<bind>
<opset="next_mul "/>
</bind>
</comp>

<comp id="316" class="1005" name="i_reg_316">
<pin_list>
<pin id="317" dir="0" index="0" bw="8" slack="0"/>
<pin id="318" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="i "/>
</bind>
</comp>

<comp id="321" class="1005" name="disp_out_m_img_addr_reg_321">
<pin_list>
<pin id="322" dir="0" index="0" bw="8" slack="1"/>
<pin id="323" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="disp_out_m_img_addr "/>
</bind>
</comp>

<comp id="330" class="1005" name="j_reg_330">
<pin_list>
<pin id="331" dir="0" index="0" bw="8" slack="0"/>
<pin id="332" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="j "/>
</bind>
</comp>

<comp id="335" class="1005" name="tmp_9_reg_335">
<pin_list>
<pin id="336" dir="0" index="0" bw="22" slack="1"/>
<pin id="337" dir="1" index="1" bw="22" slack="1"/>
</pin_list>
<bind>
<opset="tmp_9 "/>
</bind>
</comp>

<comp id="340" class="1005" name="cost_in_m_img_addr_reg_340">
<pin_list>
<pin id="341" dir="0" index="0" bw="32" slack="1"/>
<pin id="342" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="cost_in_m_img_addr "/>
</bind>
</comp>

<comp id="346" class="1005" name="min_d_cast1_reg_346">
<pin_list>
<pin id="347" dir="0" index="0" bw="32" slack="1"/>
<pin id="348" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="min_d_cast1 "/>
</bind>
</comp>

<comp id="354" class="1005" name="d_reg_354">
<pin_list>
<pin id="355" dir="0" index="0" bw="5" slack="0"/>
<pin id="356" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opset="d "/>
</bind>
</comp>

<comp id="359" class="1005" name="min_c_1_reg_359">
<pin_list>
<pin id="360" dir="0" index="0" bw="32" slack="1"/>
<pin id="361" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="min_c_1 "/>
</bind>
</comp>

<comp id="365" class="1005" name="j_assign_min_d1_reg_365">
<pin_list>
<pin id="366" dir="0" index="0" bw="32" slack="1"/>
<pin id="367" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="j_assign_min_d1 "/>
</bind>
</comp>

<comp id="370" class="1005" name="min_c_2_min_c_reg_370">
<pin_list>
<pin id="371" dir="0" index="0" bw="32" slack="1"/>
<pin id="372" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="min_c_2_min_c "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="81"><net_src comp="38" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="82"><net_src comp="40" pin="0"/><net_sink comp="76" pin=2"/></net>

<net id="83"><net_src comp="54" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="89"><net_src comp="56" pin="0"/><net_sink comp="84" pin=0"/></net>

<net id="90"><net_src comp="58" pin="0"/><net_sink comp="84" pin=2"/></net>

<net id="95"><net_src comp="70" pin="0"/><net_sink comp="91" pin=0"/></net>

<net id="102"><net_src comp="72" pin="0"/><net_sink comp="96" pin=0"/></net>

<net id="103"><net_src comp="74" pin="0"/><net_sink comp="96" pin=3"/></net>

<net id="107"><net_src comp="24" pin="0"/><net_sink comp="104" pin=0"/></net>

<net id="114"><net_src comp="104" pin="1"/><net_sink comp="108" pin=0"/></net>

<net id="118"><net_src comp="26" pin="0"/><net_sink comp="115" pin=0"/></net>

<net id="125"><net_src comp="115" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="126"><net_src comp="119" pin="4"/><net_sink comp="115" pin=0"/></net>

<net id="130"><net_src comp="24" pin="0"/><net_sink comp="127" pin=0"/></net>

<net id="137"><net_src comp="127" pin="1"/><net_sink comp="131" pin=2"/></net>

<net id="141"><net_src comp="60" pin="0"/><net_sink comp="138" pin=0"/></net>

<net id="148"><net_src comp="138" pin="1"/><net_sink comp="142" pin=0"/></net>

<net id="149"><net_src comp="142" pin="4"/><net_sink comp="138" pin=0"/></net>

<net id="153"><net_src comp="62" pin="0"/><net_sink comp="150" pin=0"/></net>

<net id="160"><net_src comp="150" pin="1"/><net_sink comp="154" pin=0"/></net>

<net id="161"><net_src comp="154" pin="4"/><net_sink comp="150" pin=0"/></net>

<net id="165"><net_src comp="48" pin="0"/><net_sink comp="162" pin=0"/></net>

<net id="172"><net_src comp="162" pin="1"/><net_sink comp="166" pin=0"/></net>

<net id="177"><net_src comp="119" pin="4"/><net_sink comp="173" pin=0"/></net>

<net id="178"><net_src comp="28" pin="0"/><net_sink comp="173" pin=1"/></net>

<net id="183"><net_src comp="108" pin="4"/><net_sink comp="179" pin=0"/></net>

<net id="184"><net_src comp="34" pin="0"/><net_sink comp="179" pin=1"/></net>

<net id="189"><net_src comp="108" pin="4"/><net_sink comp="185" pin=0"/></net>

<net id="190"><net_src comp="36" pin="0"/><net_sink comp="185" pin=1"/></net>

<net id="194"><net_src comp="119" pin="4"/><net_sink comp="191" pin=0"/></net>

<net id="199"><net_src comp="2" pin="0"/><net_sink comp="195" pin=0"/></net>

<net id="200"><net_src comp="191" pin="1"/><net_sink comp="195" pin=1"/></net>

<net id="201"><net_src comp="195" pin="2"/><net_sink comp="76" pin=1"/></net>

<net id="205"><net_src comp="131" pin="4"/><net_sink comp="202" pin=0"/></net>

<net id="210"><net_src comp="131" pin="4"/><net_sink comp="206" pin=0"/></net>

<net id="211"><net_src comp="44" pin="0"/><net_sink comp="206" pin=1"/></net>

<net id="216"><net_src comp="131" pin="4"/><net_sink comp="212" pin=0"/></net>

<net id="217"><net_src comp="36" pin="0"/><net_sink comp="212" pin=1"/></net>

<net id="222"><net_src comp="115" pin="1"/><net_sink comp="218" pin=0"/></net>

<net id="223"><net_src comp="202" pin="1"/><net_sink comp="218" pin=1"/></net>

<net id="229"><net_src comp="46" pin="0"/><net_sink comp="224" pin=0"/></net>

<net id="230"><net_src comp="218" pin="2"/><net_sink comp="224" pin=1"/></net>

<net id="231"><net_src comp="48" pin="0"/><net_sink comp="224" pin=2"/></net>

<net id="235"><net_src comp="224" pin="3"/><net_sink comp="232" pin=0"/></net>

<net id="241"><net_src comp="50" pin="0"/><net_sink comp="236" pin=0"/></net>

<net id="242"><net_src comp="218" pin="2"/><net_sink comp="236" pin=1"/></net>

<net id="243"><net_src comp="52" pin="0"/><net_sink comp="236" pin=2"/></net>

<net id="247"><net_src comp="236" pin="3"/><net_sink comp="244" pin=0"/></net>

<net id="252"><net_src comp="232" pin="1"/><net_sink comp="248" pin=0"/></net>

<net id="253"><net_src comp="244" pin="1"/><net_sink comp="248" pin=1"/></net>

<net id="260"><net_src comp="254" pin="1"/><net_sink comp="257" pin=0"/></net>

<net id="265"><net_src comp="0" pin="0"/><net_sink comp="261" pin=0"/></net>

<net id="266"><net_src comp="257" pin="1"/><net_sink comp="261" pin=1"/></net>

<net id="267"><net_src comp="261" pin="2"/><net_sink comp="84" pin=1"/></net>

<net id="271"><net_src comp="166" pin="4"/><net_sink comp="268" pin=0"/></net>

<net id="276"><net_src comp="166" pin="4"/><net_sink comp="272" pin=0"/></net>

<net id="277"><net_src comp="66" pin="0"/><net_sink comp="272" pin=1"/></net>

<net id="282"><net_src comp="166" pin="4"/><net_sink comp="278" pin=0"/></net>

<net id="283"><net_src comp="68" pin="0"/><net_sink comp="278" pin=1"/></net>

<net id="287"><net_src comp="142" pin="4"/><net_sink comp="284" pin=0"/></net>

<net id="288"><net_src comp="284" pin="1"/><net_sink comp="96" pin=2"/></net>

<net id="293"><net_src comp="150" pin="1"/><net_sink comp="289" pin=1"/></net>

<net id="299"><net_src comp="289" pin="2"/><net_sink comp="294" pin=0"/></net>

<net id="300"><net_src comp="138" pin="1"/><net_sink comp="294" pin=2"/></net>

<net id="306"><net_src comp="289" pin="2"/><net_sink comp="301" pin=0"/></net>

<net id="307"><net_src comp="150" pin="1"/><net_sink comp="301" pin=2"/></net>

<net id="311"><net_src comp="173" pin="2"/><net_sink comp="308" pin=0"/></net>

<net id="312"><net_src comp="308" pin="1"/><net_sink comp="119" pin=2"/></net>

<net id="319"><net_src comp="185" pin="2"/><net_sink comp="316" pin=0"/></net>

<net id="320"><net_src comp="316" pin="1"/><net_sink comp="108" pin=2"/></net>

<net id="324"><net_src comp="195" pin="2"/><net_sink comp="321" pin=0"/></net>

<net id="325"><net_src comp="321" pin="1"/><net_sink comp="76" pin=1"/></net>

<net id="326"><net_src comp="321" pin="1"/><net_sink comp="96" pin=1"/></net>

<net id="333"><net_src comp="212" pin="2"/><net_sink comp="330" pin=0"/></net>

<net id="334"><net_src comp="330" pin="1"/><net_sink comp="131" pin=0"/></net>

<net id="338"><net_src comp="248" pin="2"/><net_sink comp="335" pin=0"/></net>

<net id="339"><net_src comp="335" pin="1"/><net_sink comp="254" pin=0"/></net>

<net id="343"><net_src comp="261" pin="2"/><net_sink comp="340" pin=0"/></net>

<net id="344"><net_src comp="340" pin="1"/><net_sink comp="84" pin=1"/></net>

<net id="345"><net_src comp="340" pin="1"/><net_sink comp="91" pin=1"/></net>

<net id="349"><net_src comp="268" pin="1"/><net_sink comp="346" pin=0"/></net>

<net id="350"><net_src comp="346" pin="1"/><net_sink comp="294" pin=1"/></net>

<net id="357"><net_src comp="278" pin="2"/><net_sink comp="354" pin=0"/></net>

<net id="358"><net_src comp="354" pin="1"/><net_sink comp="166" pin=2"/></net>

<net id="362"><net_src comp="91" pin="2"/><net_sink comp="359" pin=0"/></net>

<net id="363"><net_src comp="359" pin="1"/><net_sink comp="289" pin=0"/></net>

<net id="364"><net_src comp="359" pin="1"/><net_sink comp="301" pin=1"/></net>

<net id="368"><net_src comp="294" pin="3"/><net_sink comp="365" pin=0"/></net>

<net id="369"><net_src comp="365" pin="1"/><net_sink comp="142" pin=2"/></net>

<net id="373"><net_src comp="301" pin="3"/><net_sink comp="370" pin=0"/></net>

<net id="374"><net_src comp="370" pin="1"/><net_sink comp="154" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: cost_in_m_img | {}
	Port: disp_out_m_img | {2 3 11 13 14 15 16 }
 - Input state : 
	Port: comp_disps : cost_in_m_img | {4 5 6 7 8 9 10 11 }
	Port: comp_disps : disp_out_m_img | {}
  - Chain level:
	State 1
	State 2
		next_mul : 1
		exitcond3 : 1
		i : 1
		StgValue_26 : 2
		tmp : 1
		disp_out_m_img_addr : 2
		p_wr_req : 3
	State 3
		j_assign_2_cast5 : 1
		exitcond2 : 1
		j : 1
		StgValue_37 : 2
		p : 2
		p_shl : 3
		p_shl_cast : 4
		p_shl1 : 3
		p_shl1_cast : 4
		tmp_9 : 5
	State 4
		tmp_2 : 1
		cost_in_m_img_addr : 2
		p_rd_req : 3
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
		min_d_cast1 : 1
		exitcond : 1
		d : 1
		StgValue_63 : 2
		tmp_3 : 1
		StgValue_66 : 2
	State 12
		j_assign_min_d1 : 1
		min_c_2_min_c : 1
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------------|---------|---------|
| Operation|     Functional Unit     |    FF   |   LUT   |
|----------|-------------------------|---------|---------|
|          |     next_mul_fu_173     |    0    |    23   |
|          |         i_fu_185        |    0    |    15   |
|    add   |         j_fu_212        |    0    |    15   |
|          |         p_fu_218        |    0    |    23   |
|          |         d_fu_278        |    0    |    15   |
|----------|-------------------------|---------|---------|
|  select  |  j_assign_min_d1_fu_294 |    0    |    32   |
|          |   min_c_2_min_c_fu_301  |    0    |    32   |
|----------|-------------------------|---------|---------|
|          |     exitcond3_fu_179    |    0    |    11   |
|   icmp   |     exitcond2_fu_206    |    0    |    11   |
|          |     exitcond_fu_272     |    0    |    11   |
|          |       tmp_5_fu_289      |    0    |    18   |
|----------|-------------------------|---------|---------|
|    sub   |       tmp_9_fu_248      |    0    |    28   |
|----------|-------------------------|---------|---------|
| writeresp|   grp_writeresp_fu_76   |    0    |    0    |
|----------|-------------------------|---------|---------|
|  readreq |    grp_readreq_fu_84    |    0    |    0    |
|----------|-------------------------|---------|---------|
|   read   |    min_c_1_read_fu_91   |    0    |    0    |
|----------|-------------------------|---------|---------|
|   write  | StgValue_66_write_fu_96 |    0    |    0    |
|----------|-------------------------|---------|---------|
|          |        tmp_fu_191       |    0    |    0    |
|          | j_assign_2_cast5_fu_202 |    0    |    0    |
|   zext   |    p_shl_cast_fu_232    |    0    |    0    |
|          |    p_shl1_cast_fu_244   |    0    |    0    |
|          |       tmp_2_fu_257      |    0    |    0    |
|          |    min_d_cast1_fu_268   |    0    |    0    |
|----------|-------------------------|---------|---------|
|bitconcatenate|       p_shl_fu_224      |    0    |    0    |
|          |      p_shl1_fu_236      |    0    |    0    |
|----------|-------------------------|---------|---------|
|   sext   |       tmp_1_fu_254      |    0    |    0    |
|----------|-------------------------|---------|---------|
|   trunc  |       tmp_3_fu_284      |    0    |    0    |
|----------|-------------------------|---------|---------|
|   Total  |                         |    0    |   234   |
|----------|-------------------------|---------|---------|

Memories:
N/A

* Register list:
+---------------------------+--------+
|                           |   FF   |
+---------------------------+--------+
| cost_in_m_img_addr_reg_340|   32   |
|         d_reg_354         |    5   |
|disp_out_m_img_addr_reg_321|    8   |
|     i_assign_1_reg_104    |    8   |
|         i_reg_316         |    8   |
|     j_assign_2_reg_127    |    8   |
|  j_assign_min_d1_reg_365  |   32   |
|         j_reg_330         |    8   |
|      min_c_1_reg_359      |   32   |
|   min_c_2_min_c_reg_370   |   32   |
|       min_c_reg_150       |   32   |
|       min_d1_reg_138      |   32   |
|    min_d_cast1_reg_346    |   32   |
|       min_d_reg_162       |    5   |
|      next_mul_reg_308     |   16   |
|      phi_mul_reg_115      |   16   |
|       tmp_9_reg_335       |   22   |
+---------------------------+--------+
|           Total           |   328  |
+---------------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_76 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_76 |  p1  |   2  |   8  |   16   ||    9    |
|  grp_readreq_fu_84  |  p1  |   2  |  32  |   64   ||    9    |
|   phi_mul_reg_115   |  p0  |   2  |  16  |   32   ||    9    |
|    min_d1_reg_138   |  p0  |   2  |  32  |   64   ||    9    |
|    min_c_reg_150    |  p0  |   2  |  32  |   64   ||    9    |
|---------------------|------|------|------|--------||---------||---------|
|        Total        |      |      |      |   242  ||  10.614 ||    45   |
|---------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   234  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|   10   |    -   |   45   |
|  Register |    -   |   328  |    -   |
+-----------+--------+--------+--------+
|   Total   |   10   |   328  |   279  |
+-----------+--------+--------+--------+
